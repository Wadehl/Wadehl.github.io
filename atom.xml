<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Venkiˡᵒᵛᵉ💕</title>
  
  
  <link href="http://dayswithvenki.top/atom.xml" rel="self"/>
  
  <link href="http://dayswithvenki.top/"/>
  <updated>2022-07-13T15:00:22.391Z</updated>
  <id>http://dayswithvenki.top/</id>
  
  <author>
    <name>Kevin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 爬虫实战！</title>
    <link href="http://dayswithvenki.top/posts/python-exercise1.html"/>
    <id>http://dayswithvenki.top/posts/python-exercise1.html</id>
    <published>2022-07-13T12:30:00.000Z</published>
    <updated>2022-07-13T15:00:22.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注爬虫需要遵循各网站根目录下的robotstxt协议"><a href="#注-爬虫需要遵循各网站根目录下的robots-txt协议！！！" class="headerlink" title="注:爬虫需要遵循各网站根目录下的robots.txt协议！！！"></a><font color="red">注:爬虫需要遵循各网站根目录下的robots.txt协议！！！</font></h1><p>本篇文章仅用于个人学习记录使用，获取到的资源在当天已全部删除，且仅爬取网站其中的部分信息，并未涉及到其他用户的私人信息等，且并未以此产生非法牟利。</p><div class="tabs" id="主要方法"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#主要方法-1">实战1:爬取某视频首页视频</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="主要方法-1"><h3 id="爬取内容"><a href="#爬取内容" class="headerlink" title="爬取内容:"></a>爬取内容:</h3><p><img src="https://s2.loli.net/2022/07/13/a8HqniAPFS5TUME.png" alt="image-20220713203443427"></p><h3 id="爬取结果"><a href="#爬取结果" class="headerlink" title="爬取结果:"></a>爬取结果:</h3><p><img src="https://s2.loli.net/2022/07/13/iGO1RNK6WwYxe37.png" alt="image-20220713204319757"></p><h3 id="实现过程及思路"><a href="#实现过程及思路" class="headerlink" title="实现过程及思路:"></a>实现过程及思路:</h3><ol><li><p>从网页主页url中打开控制台，获取主页的html源码，利用xpath解析得到这一块的子页面href。</p></li><li><p>打开子页面的源代码，发现视频并不在其中，则通过network中的Fetch/XHR查找视频来源。</p></li><li><p>从中得到Request URL，进行requests.get发现获取失败，并得到以下内容。</p><p><img src="https://s2.loli.net/2022/07/13/5X6hv3YdDSLZzq7.png" alt="image-20220713210131646" style="zoom: 67%;"></p></li><li><p>分析得到结果，是防盗链反爬导致的，回头找network内headers属性，将User-Agent,Cookie加入headers字典，再次使用requests.get发现仍然如此 ，最后发现是Referer防盗链造成的，Referer的值为子页面的href，将其组成键值对加入headers字典，再次进行requests.get，得到srcUrl。</p></li><li><p>对srcUrl进入发现还有最后一层反爬，通过比对正确的视频url和srcUrl发现：srcUrl是通过真正的url与systemTime组合修改的，找到其修改规律，用replace方法将systemTime改为f’cont-{video_id}’，得到最后正确的视频链接。</p></li><li><p>通过最后的write(requests.get(true_url).content)得到所需视频。</p></li></ol><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码:"></a>实现代码:</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">"""</span><br><span class="hljs-string">7.13 Kevin</span><br><span class="hljs-string">防盗链处理 某视频 视频爬虫 爬取首页第一个大div里面所有视频</span><br><span class="hljs-string">"""</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> html<br>etree = html.etree<br>url = <span class="hljs-string">'https://www.pearvideo.com/'</span><br>res = requests.get(url)<br>tree = etree.HTML(res.text)<br>href_list = tree.xpath(<span class="hljs-string">'//*[@id="vervideoTlist"]/div//@href'</span>)<br><span class="hljs-built_in">print</span>(href_list)<br><span class="hljs-keyword">for</span> href <span class="hljs-keyword">in</span> href_list:<br>    url = <span class="hljs-string">'https://www.pearvideo.com/'</span>+ href<br>    video_id = url.split(<span class="hljs-string">'_'</span>)[<span class="hljs-number">1</span>]<br>    params = {<br>        <span class="hljs-string">'contId'</span>: video_id<br>    }<br>    videoStatus = requests.get(<span class="hljs-string">'https://www.pearvideo.com/videoStatus.jsp'</span>, params)<br>    new_url = videoStatus.url<br>    headers = {<br>        <span class="hljs-string">'User-Agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'</span>,<br>        <span class="hljs-string">'Cookie'</span>: <span class="hljs-string">'__secdyid=e9d7070e31f729879bd4edec9f3db4567721f9f23769837d021657708580; acw_tc=2f624a1916577085808321223e1c9d5da783477514d7ff177f8220c470bbf8; JSESSIONID=2EF2FE6E5DE5C57BD7DAA3C0C372BE69; PEAR_UUID=dd85645b-e891-4615-a677-a8d2db1df2a2; _uab_collina=165770858183026495245603; Hm_lvt_9707bc8d5f6bba210e7218b8496f076a=1657708583; p_h5_u=B2141296-37D6-4117-87E8-E50BC33AFE84; Hm_lpvt_9707bc8d5f6bba210e7218b8496f076a=1657708644; SERVERID=ed8d5ad7d9b044d0dd5993c7c771ef48|1657708664|1657708580'</span>,<br>        <span class="hljs-string">'Referer'</span>: url<br>    }<br>    resp = requests.get(new_url, headers=headers)<br>    resp_json = resp.json()<br>    fake_url = resp_json[<span class="hljs-string">'videoInfo'</span>][<span class="hljs-string">'videos'</span>][<span class="hljs-string">'srcUrl'</span>]<br><br>    <span class="hljs-comment"># 这里用切片方法组合得到真实的url再组合，没用对脑子,非常复杂</span><br>    <span class="hljs-comment"># srcUrl = https://video.pearvideo.com/mp4/third/20220712/1657710591280-11905134-122533-hd.mp4</span><br>    <span class="hljs-comment"># part_list1 = fake_url.split('/')[-1].split('-')[1:]</span><br>    <span class="hljs-comment"># part_list2 = fake_url.split('-')[0].split('/')[0:-1]</span><br>    <span class="hljs-comment"># part_left = ''</span><br>    <span class="hljs-comment"># part_right = ''</span><br>    <span class="hljs-comment"># for item in part_list1:</span><br>    <span class="hljs-comment">#     part_right += item+'-'</span><br>    <span class="hljs-comment"># for it in part_list2:</span><br>    <span class="hljs-comment">#     part_left += it+'/'</span><br>    <span class="hljs-comment"># true_url = part_left + 'cont-'+video_id + '-' + part_right.strip('-')</span><br><br>    <span class="hljs-comment"># 以下使用replace方法</span><br>    systemTime = resp_json[<span class="hljs-string">'systemTime'</span>]<br>    true_url = fake_url.replace(systemTime, <span class="hljs-string">f"cont-<span class="hljs-subst">{video_id}</span>"</span>)<br>    <span class="hljs-comment">#print(true_url)</span><br>    video_name = <span class="hljs-string">f'<span class="hljs-subst">{video_id}</span>.mp4'</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'video/'</span>+video_name, <span class="hljs-string">'wb'</span>) <span class="hljs-keyword">as</span> fw:<br>        resp2 = requests.get(true_url)<br>        fw.write(resp2.content)<br></code></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">网页爬虫初学——一些爬虫实战</summary>
    
    
    
    
    <category term="🐍Python" scheme="http://dayswithvenki.top/tags/%F0%9F%90%8DPython/"/>
    
    <category term="🕷️爬虫" scheme="http://dayswithvenki.top/tags/%F0%9F%95%B7%EF%B8%8F%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python Xpath模块</title>
    <link href="http://dayswithvenki.top/posts/python-xpath1.html"/>
    <id>http://dayswithvenki.top/posts/python-xpath1.html</id>
    <published>2022-07-12T08:18:00.000Z</published>
    <updated>2022-07-12T14:24:21.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xpath模块"><a href="#Xpath模块" class="headerlink" title="Xpath模块"></a>Xpath模块</h1><blockquote><p>from lxml import html</p><p>etree = html.etree</p></blockquote><h2 id="使用到的html文件"><a href="#使用到的HTML文件" class="headerlink" title="使用到的HTML文件:"></a>使用到的HTML文件:</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"utf-8"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">titile</span>&gt;</span>title<span class="hljs-tag">&lt;/<span class="hljs-name">titile</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.baidu.com"</span>&gt;</span>百度<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.google.com"</span>&gt;</span>谷歌<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.sougou.com"</span>&gt;</span>搜狗<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"feiji"</span>&gt;</span>飞机<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"dapao"</span>&gt;</span>大炮<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"huoche"</span>&gt;</span>火车<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"job"</span>&gt;</span>李嘉诚<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"common"</span>&gt;</span>胡辣汤<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><h2 id="一个小样例"><a href="#一个小样例：" class="headerlink" title="一个小样例："></a>一个小样例：</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> html<br><br>tree = html.etree.parse(<span class="hljs-string">"b.html"</span>)<br><span class="hljs-comment"># result = tree.xpath('/html')</span><br><span class="hljs-comment"># result = tree.xpath('/html/body/ul/li/a/text()')     # xpath索引从1开始</span><br><br><span class="hljs-comment"># result = tree.xpath('/html/body/ol/li[2]/a/text()')# 指取该标签的内容</span><br>result = tree.xpath(<span class="hljs-string">'/html/body/ol/li/a[@href="dapao"]/text()'</span>)  <br><span class="hljs-comment"># @href表示属性href等于双引号内内容</span><br><span class="hljs-built_in">print</span>(result)<br><br>li_list = tree.xpath(<span class="hljs-string">'/html/body/ol/li'</span>)<br><span class="hljs-keyword">for</span> li <span class="hljs-keyword">in</span> li_list:<br>    tex = li.xpath(<span class="hljs-string">'./a/@href'</span>)<span class="hljs-comment"># 指取属性href的值</span><br>    <span class="hljs-built_in">print</span>(tex)<br><br><span class="hljs-built_in">print</span>(tree.xpath(<span class="hljs-string">'/html/body/div[1]/text()'</span>))<br></code></pre></td></tr></tbody></table></figure><p>可以通过浏览器控制台的功能快速得到xpath</p><h2 id="一个实例"><a href="#一个实例" class="headerlink" title="一个实例"></a>一个实例</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">"""</span><br><span class="hljs-string">7.12 Kevin</span><br><span class="hljs-string">猪八戒网 Xpath 爬虫</span><br><span class="hljs-string">"""</span><br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> html<br><span class="hljs-keyword">import</span> requests<br><br>etree = html.etree<br>url = <span class="hljs-string">'https://beijing.zbj.com/search/shop/?type=new&amp;kw=saas'</span><br>resp = requests.get(url)<br><br>html = etree.HTML(resp.text)<br><br>divs = html.xpath(<span class="hljs-string">'//*[@id="__layout"]/div/div[3]/div/div[3]/div[4]/div[1]/div'</span>)<br><span class="hljs-keyword">for</span> div <span class="hljs-keyword">in</span> divs:<br>    name = div.xpath(<span class="hljs-string">'./div[1]/div/div/a/div/div/div/div[1]/div[1]/div[2]/div[1]/text()'</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(name) != <span class="hljs-number">0</span>:<br>        com_name = name[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">else</span>:<br>        com_name = <span class="hljs-string">"no info"</span><br>    city = div.xpath(<span class="hljs-string">'./div[1]/div/div/a/div/div/div/div[1]/div[1]/div[2]/div[2]/text()'</span>)<br>    price = div.xpath(<span class="hljs-string">'./div/div/div/a[@target="_blank"]/div/div/div/div[1]/div[2]/div/div/text()'</span>)<br>    com_good = div.xpath(<span class="hljs-string">'.//div[1]/div/div/a/div/div/div/div[2]/div[2]/text()'</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(city) != <span class="hljs-number">0</span>:<br>        city_name = (city[<span class="hljs-number">2</span>][<span class="hljs-number">5</span>:-<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">else</span>:<br>        city_name = <span class="hljs-string">"no info"</span><br>    <span class="hljs-built_in">print</span>(com_name, city_name, com_good[<span class="hljs-number">0</span>], price[<span class="hljs-number">0</span>])   <span class="hljs-comment"># 公司名、所处城市、擅长、平均成交价格</span><br><br><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">网页爬虫初学——Python Xpath模块</summary>
    
    
    
    
    <category term="🐍Python" scheme="http://dayswithvenki.top/tags/%F0%9F%90%8DPython/"/>
    
    <category term="🕷️爬虫" scheme="http://dayswithvenki.top/tags/%F0%9F%95%B7%EF%B8%8F%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python BS模块</title>
    <link href="http://dayswithvenki.top/posts/python-beautifulsoup.html"/>
    <id>http://dayswithvenki.top/posts/python-beautifulsoup.html</id>
    <published>2022-07-12T05:38:32.877Z</published>
    <updated>2022-07-12T10:13:14.032Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bs模块"><a href="#bs模块" class="headerlink" title="bs模块"></a>bs模块</h1><blockquote><p>from bs4 import BeautifulSoup</p></blockquote><h2 id="解析器"><a href="#解析器" class="headerlink" title="解析器"></a>解析器</h2><p><img src="https://s2.loli.net/2022/07/12/dl8GhTYni5Crgyk.png" alt="image-20220712155440694"></p><h3 id="lxml-html-解析器下的选择器"><a href="#lxml-HTML-解析器下的选择器" class="headerlink" title="lxml HTML 解析器下的选择器"></a>lxml HTML 解析器下的选择器</h3><h4 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h4><p>•选择元素、获取名称、获取属性、获取内容、嵌套选择、子节点和子孙节点、父节点和祖先节点、兄弟节点</p><blockquote><p>•soup.prettify()、soup.title.name、soup.head、soup.p.string、soup.p[‘name’]</p></blockquote><h4 id="标准选择器"><a href="#标准选择器" class="headerlink" title="标准选择器"></a>标准选择器</h4><blockquote><p>•soup.find_all(‘ul’)、find_parents()、find_next_siblings()、find_previous_siblings()</p><p>•soup.find(‘ul’)、find_parent()、find_next_sibling()、find_previous_sibling()</p></blockquote><h4 id="css选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h4><blockquote><p>soup.select()、soup.select_one()直接传入选择器参数 [.代表class,#代表id]</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">soup.select(<span class="hljs-string">'.panel .panel-heading'</span>)<br>soup.select(<span class="hljs-string">'ul li'</span>)<br>soup.select(<span class="hljs-string">'#list-2 .element'</span>)<br>ul = soup.select(<span class="hljs-string">'ul'</span>)[<span class="hljs-number">0</span>]<br>uid = ul[<span class="hljs-string">'id'</span>]<br>trs = soup.select(<span class="hljs-string">'table tbody tr'</span>)<br>title = trs[<span class="hljs-number">0</span>].select_one(<span class="hljs-string">'td a'</span>).text<br></code></pre></td></tr></tbody></table></figure><h2 id="一个样例"><a href="#一个样例" class="headerlink" title="一个样例"></a>一个样例</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Python">url = <span class="hljs-string">''</span><br>resp = requests.get(url)<br><br><span class="hljs-comment">#解析数据</span><br><span class="hljs-comment"># 1.把页面源代码交给BeautifulSoup处理，生成bs对象</span><br>page = BeautifulSoup(resp.text, <span class="hljs-string">"lxml"</span>) <span class="hljs-comment">#指定html解析器</span><br><span class="hljs-comment"># 2.从bs对象中查找数据</span><br><span class="hljs-comment"># find(标签,属性=值)</span><br><span class="hljs-comment"># find_all（标签,属性=值)</span><br><span class="hljs-comment"># table = page.find("table", class_="hq_table") #class是Python关键字</span><br>table = page.find(<span class="hljs-string">"table"</span>, attrs={<span class="hljs-string">"class"</span>: <span class="hljs-string">"hq_table"</span>})  <span class="hljs-comment">#避免class</span><br></code></pre></td></tr></tbody></table></figure><h2 id="一个实例"><a href="#一个实例" class="headerlink" title="一个实例"></a>一个实例</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">"""</span><br><span class="hljs-string">7.12 Kevin</span><br><span class="hljs-string">优美图库 唯美壁纸 BeautifulSoup解析实例</span><br><span class="hljs-string">"""</span><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br>url = <span class="hljs-string">'https://www.umei.cc/bizhitupian/weimeibizhi/'</span><br>resp = requests.get(url)<br>resp.encoding = <span class="hljs-string">'utf-8'</span><br><br><br>page = BeautifulSoup(resp.text, <span class="hljs-string">"lxml"</span>)<br>a_list = page.find(<span class="hljs-string">"ul"</span>, class_=<span class="hljs-string">"pic-list after"</span>).find_all(<span class="hljs-string">"a"</span>)<br><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> a_list:<br>    curl = <span class="hljs-string">'https://www.umei.cc'</span>+a.get(<span class="hljs-string">'href'</span>)<br>    resp2 = requests.get(curl)<br>    resp2.encoding = <span class="hljs-string">'utf-8'</span><br>    page2 = BeautifulSoup(resp2.text, <span class="hljs-string">"lxml"</span>)<br>    src = page2.find(<span class="hljs-string">"section"</span>, class_=<span class="hljs-string">"img-content"</span>).find(<span class="hljs-string">"img"</span>).get(<span class="hljs-string">'src'</span>)<br>    img_name = src.split(<span class="hljs-string">'/'</span>)[-<span class="hljs-number">1</span>]   <span class="hljs-comment"># 以网站图片名字命名图片</span><br>    src = requests.get(src)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"img/"</span>+img_name, <span class="hljs-string">'wb'</span>) <span class="hljs-keyword">as</span> fw:<br>        fw.write(src.content)   <span class="hljs-comment"># 以字节方式写入文件</span><br>        <span class="hljs-built_in">print</span>(img_name, <span class="hljs-string">"over!"</span>)<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">网页爬虫初学——Python BS模块</summary>
    
    
    
    
    <category term="🐍Python" scheme="http://dayswithvenki.top/tags/%F0%9F%90%8DPython/"/>
    
    <category term="🕷️爬虫" scheme="http://dayswithvenki.top/tags/%F0%9F%95%B7%EF%B8%8F%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python Re模块</title>
    <link href="http://dayswithvenki.top/posts/python-remodule.html"/>
    <id>http://dayswithvenki.top/posts/python-remodule.html</id>
    <published>2022-07-11T07:15:00.000Z</published>
    <updated>2022-07-11T12:41:29.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="re模块"><a href="#re模块" class="headerlink" title="re模块"></a>re模块</h1><blockquote><p>import re</p></blockquote><h2 id="findall"><a href="#findall：" class="headerlink" title="findall："></a>findall：</h2><p>匹配字符串中所有符合正则的内容，返回迭代器。</p><p>lst = re.findall(r”\d+”, “我的电话号码一个是：12345,另一个是：13579”)<br>print(lst)</p><blockquote><p>[‘12345’,’13579’]</p></blockquote><h2 id="finditer"><a href="#finditer" class="headerlink" title="finditer:"></a>finditer:</h2><p>匹配字符串中所有的内容，返回迭代器,获取内容需要.group()。<br>it = re.finditer(r”\d+”, “我的电话号码一个是：12345,另一个是：13579”)<br>for i in it:<br>    print(i.group())</p><blockquote><p>12345<br>13579</p></blockquote><h2 id="search"><a href="#search" class="headerlink" title="search:"></a>search:</h2><p>返回match对象，获取数据需要.group()，找到一个结果就返回。<br>s = re.search(r”\d+”, “我的电话号码一个是：12345,另一个是：13579”)<br>print(s.group())</p><blockquote><p>12345</p></blockquote><h2 id="match"><a href="#match" class="headerlink" title="match:"></a>match:</h2><p>从头开始匹配与search类似<br>s = re.search(r”\d+”, “12345,另一个是：13579”)<br>print(s.group())</p><blockquote><p>12345</p></blockquote><h2 id="预加载正则表达式"><a href="#预加载正则表达式" class="headerlink" title="预加载正则表达式"></a>预加载正则表达式</h2><p>obj = re.compile(r”\d+”)<br>rets = obj.finditer(“我的电话号码一个是：12345,另一个是：13579”)<br>for ret in rets:<br>    print(ret.group())</p><blockquote><p>12345<br>13579</p></blockquote><p>一个样例[选择符合表达式内容的部分内容方法]:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><br>s = <span class="hljs-string">"""</span><br><span class="hljs-string">&lt;div class='Jay'&gt;&lt;span id='1'&gt;周杰伦&lt;/span&gt;&lt;/div&gt;</span><br><span class="hljs-string">&lt;div class='Eason'&gt;&lt;span id='2'&gt;陈奕迅&lt;/span&gt;&lt;/div&gt;</span><br><span class="hljs-string">&lt;div class='JJ'&gt;&lt;span id='3'&gt;林俊杰&lt;/span&gt;&lt;/div&gt;</span><br><span class="hljs-string">"""</span><br><br><span class="hljs-comment"># (?p&lt;分组名字&gt;正则) 可以单独从正则匹配的内容中进一步提取内容</span><br><span class="hljs-comment"># re.S 令.能够匹配所有字符</span><br>obj = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r"&lt;div class='.*?'&gt;&lt;span id='(?P&lt;top_id&gt;\d+)'&gt;(?P&lt;name&gt;.*?)&lt;/span&gt;&lt;/div&gt;"</span>, re.S)<br><br>res = obj.finditer(s)<br><span class="hljs-keyword">for</span> it <span class="hljs-keyword">in</span> res:<br>    <span class="hljs-built_in">print</span>(it.group(<span class="hljs-string">'top_id'</span>), it.group(<span class="hljs-string">'name'</span>))<br></code></pre></td></tr></tbody></table></figure><div class="tabs" id="两个案例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#两个案例-1">豆瓣top250</button></li><li class="tab"><button type="button" data-href="#两个案例-2">盗版天堂电影</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="两个案例-1"><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-string">"""</span><br><span class="hljs-string">7.11 Kevin</span><br><span class="hljs-string">豆瓣电影排行榜top250爬虫(源代码只能进行前25个电影爬虫,通过while+params解决)</span><br><span class="hljs-string">"""</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> csv<br><br>st = <span class="hljs-number">0</span><br>url = <span class="hljs-string">'https://movie.douban.com/top250'</span><br>header = [<span class="hljs-string">'电影名'</span>, <span class="hljs-string">'上映年份'</span>, <span class="hljs-string">'评分'</span>, <span class="hljs-string">'评分人数'</span>]<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"ranting.csv"</span>, <span class="hljs-string">"w"</span>, encoding=<span class="hljs-string">"utf-8"</span>, newline=<span class="hljs-string">''</span>) <span class="hljs-keyword">as</span> fw:<br>    writer = csv.writer(fw)<br>    writer.writerow(header)<br><br><span class="hljs-keyword">while</span> st &lt; <span class="hljs-number">250</span>:<br>    params = {<span class="hljs-string">'start'</span>: st}<br>    headers = {<br>        <span class="hljs-string">'User-Agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'</span><br>    }<br>    resp = requests.get(url, headers=headers, params=params)<br>    resp.encoding = <span class="hljs-string">'utf-8'</span><br>    html = resp.text<br>    <br>    obj = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r'&lt;li&gt;.*?&lt;span class="title"&gt;(?P&lt;name&gt;.*?)'</span><br>                     <span class="hljs-string">r'&lt;/span&gt;.*?&lt;p class=""&gt;.*?&lt;br&gt;(?P&lt;year&gt;.*?)&amp;nbsp'</span><br>                     <span class="hljs-string">r'.*?&lt;span class="rating_num" property="v:average"&gt;(?P&lt;rating&gt;.*?)&lt;/span&gt;'</span><br>                     <span class="hljs-string">r'.*?&lt;span&gt;(?P&lt;amount&gt;.*?)人评价&lt;/span&gt;'</span>, re.S)<br>    res = obj.finditer(html)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"ranting.csv"</span>, <span class="hljs-string">"a"</span>, encoding=<span class="hljs-string">"utf-8"</span>, newline=<span class="hljs-string">''</span>) <span class="hljs-keyword">as</span> fw:<br>        writer = csv.writer(fw)<br>        <span class="hljs-keyword">for</span> it <span class="hljs-keyword">in</span> res:<br>            dic = it.groupdict()<br>            dic[<span class="hljs-string">"year"</span>] = dic[<span class="hljs-string">"year"</span>].strip()<br>            writer.writerow(dic.values())<br>    st += <span class="hljs-number">25</span><br></code></pre></td></tr></tbody></table></figure><p>结果：</p><p><img src="https://s2.loli.net/2022/07/11/wURD3JSYHog6npO.png" alt="image-20220711173010251"></p><p><img src="https://s2.loli.net/2022/07/11/O8aotcHj4mlTEb6.png" alt="image-20220711173030280"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="两个案例-2"><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">"""</span><br><span class="hljs-string">7.11 Kevin</span><br><span class="hljs-string">爬取电影天堂2022必看电影名称，下载链接</span><br><span class="hljs-string">"""</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><br>url = <span class="hljs-string">"https://dytt89.com/"</span><br>headers = {<br>    <span class="hljs-string">'User-Agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'</span><br>}<br><br>resp = requests.get(url, headers)<br>resp.encoding = <span class="hljs-string">'gb2312'</span><br>html = resp.text<br>url_list = []<br>obj1 = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r"2022必看热片.*?&lt;ul&gt;(?P&lt;ul&gt;.*?)&lt;/ul&gt;"</span>, re.S)<br>obj2 = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r"&lt;a href='(?P&lt;href&gt;.*?)'"</span>, re.S)<br>obj3 = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r'◎片　　名(?P&lt;name&gt;.*?)&lt;br /&gt;.*?'</span><br>                  <span class="hljs-string">r'&lt;td style="WORD-WRAP: break-word" bgcolor="#fdfddf"&gt;&lt;a href="(?P&lt;magnet&gt;.*?)"&gt;'</span>, re.S)<br>res1 = obj1.finditer(html)<br><span class="hljs-keyword">for</span> it <span class="hljs-keyword">in</span> res1:<br>    ul = it.group(<span class="hljs-string">'ul'</span>)<br>    res2 = obj2.finditer(ul)<br>    <span class="hljs-keyword">for</span> it2 <span class="hljs-keyword">in</span> res2:<br>        new_url = url+it2.group(<span class="hljs-string">'href'</span>).strip(<span class="hljs-string">'/'</span>)<br>        url_list.append(new_url)<br>        <span class="hljs-comment">#resp2 = requests.get(new_url, headers=headers)</span><br>        <span class="hljs-comment"># resp2.encoding = 'gb2312'</span><br>        <span class="hljs-comment"># res3 = obj3.finditer(resp2.text)</span><br>        <span class="hljs-comment"># for it3 in res3:</span><br>        <span class="hljs-comment">#     print(it3.group('name'), it3.group('magnet'))</span><br>        <span class="hljs-comment">#     break</span><br><span class="hljs-keyword">for</span> href <span class="hljs-keyword">in</span> url_list:<br>    child_resp = requests.get(href, headers=headers)<br>    child_resp.encoding = <span class="hljs-string">'gb2312'</span><br>    res3 = obj3.search(child_resp.text)<br>    <span class="hljs-built_in">print</span>(res3.group(<span class="hljs-string">'name'</span>), res3.group(<span class="hljs-string">'magnet'</span>))<br></code></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">网页爬虫初学——Python Re模块</summary>
    
    
    
    
    <category term="🐍Python" scheme="http://dayswithvenki.top/tags/%F0%9F%90%8DPython/"/>
    
    <category term="🕷️爬虫" scheme="http://dayswithvenki.top/tags/%F0%9F%95%B7%EF%B8%8F%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python 数据分析</title>
    <link href="http://dayswithvenki.top/posts/python-data-analysis.html"/>
    <id>http://dayswithvenki.top/posts/python-data-analysis.html</id>
    <published>2022-07-10T16:00:00.000Z</published>
    <updated>2022-07-11T12:41:07.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据解析"><a href="#数据解析" class="headerlink" title="数据解析"></a>数据解析</h2><p>Requests等可以抓取整个网页，但是我们并不需要整个网页的内容，则可以通过数据提取得到需要的内容。</p><p>三种解析方式：</p><p>1.正则表达式解析</p><p>2.bs4解析</p><p>3.xpath解析</p><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>优点: 速度快、效率高、准确性高 缺点：上手困难</p><p>正则语法：使用元字符进行排列组合用来匹配字符串，在线测试正则表达式:tool.oschina.net/regex/</p><p>元字符: 具有固定含义的符号</p><h3 id="常用元字符"><a href="#常用元字符" class="headerlink" title="常用元字符"></a>常用元字符</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">. 匹配除换行符以外的任意字符<br>\w 匹配字母或数字或下划线<br>\s 匹配任意空白字符<br>\d 数字<br>\n 换行符<br>\t 制表符<br><br>^ 字符串的开始<br>$ 字符串的结尾<br><br>\W 匹配非字母或数字或下划线<br>\D 匹配非数字<br>\S 匹配非空白字符<br>a|b a或b<br>() 匹配括号内的表达式，也表示一个组<br>[...] 匹配字符组中的字符<br>[^...] 匹配除了字符组中字符的所有字符<br></code></pre></td></tr></tbody></table></figure><h3 id="量词"><a href="#量词：" class="headerlink" title="量词："></a>量词：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">* 重复零次或更多次<br>+ 重复一次或多次<br>? 重复零次或一次<br>{n} 重复n次<br>{n,} 重复n次或更多次<br>{n,m} 重复n到m次<br></code></pre></td></tr></tbody></table></figure><h3 id="贪婪匹配和惰性匹配"><a href="#贪婪匹配和惰性匹配" class="headerlink" title="贪婪匹配和惰性匹配:"></a>贪婪匹配和<font color="red">惰性匹配</font>:</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python">.* 贪婪匹配<br>.*? 惰性匹配<br></code></pre></td></tr></tbody></table></figure><p>案例:</p><figure class="highlight makefile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">str: 一起打游戏吗，待会打游戏吗，还是现在打游戏呢？</span><br><span class="hljs-section">reg: 一.*?打游戏</span><br><br><span class="hljs-section">结果: 一起打游戏</span><br><br><span class="hljs-section">reg: 一.*打游戏</span><br><span class="hljs-section">结果:一起打游戏吗，待会打游戏吗，还是现在打游戏</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">网页爬虫初学——正则表达式</summary>
    
    
    
    
    <category term="🐍Python" scheme="http://dayswithvenki.top/tags/%F0%9F%90%8DPython/"/>
    
    <category term="🕷️爬虫" scheme="http://dayswithvenki.top/tags/%F0%9F%95%B7%EF%B8%8F%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python Requests</title>
    <link href="http://dayswithvenki.top/posts/python-requests.html"/>
    <id>http://dayswithvenki.top/posts/python-requests.html</id>
    <published>2022-07-07T16:00:00.000Z</published>
    <updated>2022-07-13T10:25:39.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="request库"><a href="#Request库" class="headerlink" title="Request库"></a>Request库</h2><div class="tabs" id="主要方法"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#主要方法-1">get</button></li><li class="tab"><button type="button" data-href="#主要方法-2">post</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="主要方法-1"><p>获取http网页的主要方法，对应http的get。</p><p><font size="5px">requests.get(url, params=None, **kwargs)</font><br></p><div class="tabs" id="get属性"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#get属性-1">params</button></li><li class="tab"><button type="button" data-href="#get属性-2">**kwargs</button></li><li class="tab"><button type="button" data-href="#get属性-3">Response对象的属性</button></li><li class="tab"><button type="button" data-href="#get属性-4">一个样例</button></li><li class="tab"><button type="button" data-href="#get属性-5">另一个案例(关于需要登录的网页处理：Cookie)</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="get属性-1"><p><span class="nota" data-nota="requests.get方法在发起请求之前，会先对params查询参数进行编码，编码后的查询参数会自动的和base_url进行拼接，拼接成一个完整的url地址后，再向网站发起请求。">用于发送查询字符串，一般为字典或者字节流格式。</span></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>url = <span class="hljs-string">'https://www.baidu.com/s'</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>values = {<br><span class="hljs-string">'wd'</span>:<span class="hljs-string">'python'</span><br>}<br><span class="hljs-meta">&gt;&gt;&gt; </span>resp = requests.get(url, params=values)<br><span class="hljs-meta">&gt;&gt;&gt; </span>resp.url<br><span class="hljs-string">'https://www.baidu.com/s?wd=python'</span><br></code></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="get属性-2"><p>可选参数。</p><div class="table-container"><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">写法</th><th>作用</th></tr></thead><tbody><tr><td style="text-align:center">headers</td><td style="text-align:center">headers = {‘User-Agent’:xxx, ‘Cookie’:xxx, ‘Referer’:xxx}</td><td>其实这里是伪装成浏览器 <a href="https://so.csdn.net/so/search?q=header&amp;spm=1001.2101.3001.7020">header</a>是浏览器向服务器发送的一个头信息，上面的代码就是发送了浏览器自己的型号。</td></tr><tr><td style="text-align:center">auth</td><td style="text-align:center">auth = (‘username’, ‘password’)</td><td>Web客户端验证参数，用于网站的用户名和密码验证。</td></tr><tr><td style="text-align:center">verify</td><td style="text-align:center">verify = False/True</td><td>证书认证参数，python去访问一个<strong>没有经过CA证书认证</strong>的<strong>因特网服务类型是https</strong>的网站, 那么就会抛出一个SSLError 异常，进而我们就无法正常访问这个网站。此时！我们就可以通过设置<strong>verify</strong>参数为<strong>False</strong>，忽略证书认证，访问网站。</td></tr><tr><td style="text-align:center">proxies</td><td style="text-align:center">proxies = {‘协议’:’协议://IP:端口号’}</td><td>代理IP参数，爬虫时被封IP可以使用代理IP继续爬取。</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="get属性-3"><p><img src="https://s2.loli.net/2022/07/09/ZHONj4FbeU1txPD.png" alt="img"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="get属性-4"><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">"""</span><br><span class="hljs-string">7.9 Kevin</span><br><span class="hljs-string">爬取一个百度搜索的内容</span><br><span class="hljs-string">"""</span><br><span class="hljs-keyword">import</span> requests<br>s = <span class="hljs-built_in">input</span>(<span class="hljs-string">"请输入需要查询的内容"</span>)<br><span class="hljs-comment">#headers内容可以从控制台的Network查看</span><br>headers = {<br>    <span class="hljs-string">'User-Agent'</span>:<span class="hljs-string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'</span><br>}<br><span class="hljs-comment">#kv的具体键值对可以通过具体网页观察url</span><br>kv = {<span class="hljs-string">'wd'</span> : s}<br>url = <span class="hljs-string">'https://www.baidu.com/s'</span><br>r = requests.get(url, params=kv, headers=headers)<br>r.encoding = r.apparent_encoding <span class="hljs-comment">#r.encoding = 'utf-8'</span><br><span class="hljs-built_in">print</span>(r.url)<br><span class="hljs-built_in">print</span>(r.text)<br></code></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="get属性-5"><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">"""</span><br><span class="hljs-string">7.13 Kevin</span><br><span class="hljs-string">处理Cookie模拟用户登录</span><br><span class="hljs-string"></span><br><span class="hljs-string">1.登录 -&gt; 得到Cookie</span><br><span class="hljs-string">2.带着Cookie 去请求书架的url -&gt; 书架上的内容</span><br><span class="hljs-string"></span><br><span class="hljs-string">必须把以上操作连起来</span><br><span class="hljs-string">可以使用session进行请求 -&gt; session可以认为是一连串的请求，在这个过程中Cookie不会消失</span><br><span class="hljs-string">"""</span><br><span class="hljs-keyword">import</span> requests<br><br>session = requests.session()<br><br><span class="hljs-comment"># 1.登录</span><br>url = <span class="hljs-string">'https://passport.17k.com/ck/user/login'</span><br><br>resp = session.post(url, data={<span class="hljs-string">'loginName'</span>: <span class="hljs-string">'13433947627'</span>, <span class="hljs-string">'password'</span>: <span class="hljs-string">'EasonChan0830'</span>})<br><span class="hljs-comment"># print(resp.cookies) # 看cookie</span><br><br><span class="hljs-comment"># 2.数据处理</span><br><span class="hljs-comment"># 刚刚的会话session中是有cookie的</span><br>resp2 = session.get(<span class="hljs-string">'https://user.17k.com/ck/author/shelf?page=1&amp;appKey=2406394919'</span>)<br><span class="hljs-built_in">print</span>(resp2.json())<br><br><span class="hljs-comment"># 以上可以用下面内容代替</span><br>headers = {<br><span class="hljs-string">'Cookie'</span>: <span class="hljs-string">'XXX'</span><span class="hljs-comment"># 从控制台Header里面复制</span><br>}<br><br>resp = requests.get(<span class="hljs-string">'https://user.17k.com/ck/author/shelf?page=1&amp;appKey=2406394919'</span>, headers= headers)<br><span class="hljs-built_in">print</span>(resp.json())<br></code></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="主要方法-2"><p></p><p>向网页提交post申请的方法，对应http的post。</p><p></p><p></p><p><font size="5px">requests.post(url, data={key: value}, **kwargs)</font><br></p><p></p><div class="tabs" id="post属性"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#post属性-1">data</button></li><li class="tab"><button type="button" data-href="#post属性-2">可选参数</button></li><li class="tab"><button type="button" data-href="#post属性-3">属性参数</button></li><li class="tab"><button type="button" data-href="#post属性-4">一个样例</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="post属性-1"><p><span class="nota" data-nota="可以在空值台>network>payload>From Data查看">字典，元组列表，字节或要发送到指定URL的文件对象。</span></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>url = <span class="hljs-string">'https://fanyi.baidu.com'</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>values = {<br><span class="hljs-string">'wd'</span>:<span class="hljs-string">'python'</span><br>}<br><span class="hljs-meta">&gt;&gt;&gt; </span>resp = requests.post(url, data=values)<br></code></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="post属性-2"><p>与get类似。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="post属性-3"><p>与get类似。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="post属性-4"><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">"""</span><br><span class="hljs-string">7.9 Kevin</span><br><span class="hljs-string">爬取一个百度翻译的内容</span><br><span class="hljs-string">"""</span><br><br><span class="hljs-keyword">import</span> requests<br><br>s = <span class="hljs-built_in">input</span>(<span class="hljs-string">'请输入你需要翻译的内容\n'</span>)<br>params = {<span class="hljs-string">'kw'</span>: s}<br>headers = {<span class="hljs-string">'User-Agent'</span>:<span class="hljs-string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'</span>}<br>url = <span class="hljs-string">'https://fanyi.baidu.com/sug'</span><br><br>resp = requests.post(url, data=params)<br><span class="hljs-built_in">print</span>(resp.json())<br></code></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="另一个实例爬取豆瓣电影排行榜"><a href="#另一个实例-爬取豆瓣电影排行榜" class="headerlink" title="另一个实例(爬取豆瓣电影排行榜):"></a>另一个实例(爬取豆瓣电影排行榜):</h2><p>1.进入douban.com打开控制台观察浏览器控制台的network。</p><p>2.进入Fetch/XDR观察（简化资源视图），从中找到所需的json库的url等属性，观察request method（get/post)</p><p>3.复制url，url”?”后方的可以通过payload得到，post为getdata，get为parameters，通过字典赋值可以简化url。</p><p>4.通过requests.get()/requests.post()得到resp,用resp.text测试是否爬取正常,一般反爬需要加入Headers属性，中间的User-Agent仿造浏览器访问界面。</p><p>实现代码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-string">"""</span><br><span class="hljs-string">7.11 Kevin</span><br><span class="hljs-string">豆瓣电影排行榜爬虫</span><br><span class="hljs-string">"""</span><br><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">'https://movie.douban.com/j/chart/top_list'</span><br>params = {<br>    <span class="hljs-comment">#其中start和limit属性可切换，start为排行榜的开始位数-1，limit为一次性爬取的电影数量</span><br>    <span class="hljs-string">'type'</span>: <span class="hljs-string">'24'</span>,<br>    <span class="hljs-string">'interval_id'</span>: <span class="hljs-string">'100:90'</span>,<br>    <span class="hljs-string">'action'</span>: <span class="hljs-string">""</span>,<br>    <span class="hljs-string">'start'</span>: <span class="hljs-string">'0'</span>,<br>    <span class="hljs-string">'limit'</span>: <span class="hljs-string">'60'</span><br>}<br>headers = {<br>    <span class="hljs-string">'User-Agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'</span><br>}<br>resp = requests.get(url, params=params, headers=headers)<br><span class="hljs-built_in">print</span>(resp.json())<br>resp.close() <span class="hljs-comment">#关闭请求</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">网页爬虫初学——Python Requests库</summary>
    
    
    
    
    <category term="🐍Python" scheme="http://dayswithvenki.top/tags/%F0%9F%90%8DPython/"/>
    
    <category term="🕷️爬虫" scheme="http://dayswithvenki.top/tags/%F0%9F%95%B7%EF%B8%8F%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python 爬虫</title>
    <link href="http://dayswithvenki.top/posts/python-crawler.html"/>
    <id>http://dayswithvenki.top/posts/python-crawler.html</id>
    <published>2022-07-06T16:00:00.000Z</published>
    <updated>2022-07-09T04:14:42.420Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一些关键信息"><a href="#一些关键信息" class="headerlink" title="一些关键信息"></a>一些关键信息</h2><h3 id="请求头的关键信息"><a href="#请求头的关键信息" class="headerlink" title="请求头的关键信息"></a>请求头的关键信息</h3><p>1.User-Agent：请求载体的身份识别。（用什么发的请求）</p><p>2.Referer：防盗链。（请求的页面来源）</p><p>3.Cookie：本地字符串数据信息。（用户登录信息，反爬的token）</p><h3 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h3><p>1.get</p><p>2.post</p><h3 id="响应头的关键信息"><a href="#响应头的关键信息" class="headerlink" title="响应头的关键信息"></a>响应头的关键信息</h3><p>1.Cookie：本地字符串数据信息。（用户登录信息，反爬的token）</p><p>2.一些奇怪的字符串（一般是token字样，防止攻击和反爬）</p><h2 id="得到页面源代码可用库"><a href="#得到页面源代码可用库" class="headerlink" title="得到页面源代码可用库:"></a>得到页面源代码可用库:</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-comment">#from urllib.request import urlopen </span><br></code></pre></td></tr></tbody></table></figure><h3 id="urlopen用法"><a href="#urlopen用法" class="headerlink" title="urlopen用法"></a>urlopen用法</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">url = <span class="hljs-string">'https://www.baidu.com'</span><br>resp = urlopen(url)<br><span class="hljs-built_in">print</span>(resp.read().decode(<span class="hljs-string">'utf-8'</span>))<span class="hljs-comment">#用utf-8解码得到页面源代码</span><br></code></pre></td></tr></tbody></table></figure><h3 id="request库用法"><a href="#request库用法" class="headerlink" title="request库用法"></a>request库用法</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">url = <span class="hljs-string">'https://www.baidu.com/s'</span><br><span class="hljs-comment">#请求头关键信息,可通过f12查看</span><br>headers = {<br><span class="hljs-string">'User-Agent'</span>:<span class="hljs-string">''</span><br><span class="hljs-string">'Cookie'</span>:<span class="hljs-string">''</span><br><span class="hljs-string">'Referer'</span>:<span class="hljs-string">''</span><br>}<br>params = {<br>    <span class="hljs-string">'wd'</span> : <span class="hljs-string">'python'</span><br>}<br><span class="hljs-comment">#连接在url后方的:如www.baidu.com/s?</span><br>resp = requests.get(url, params=params, headers=headers)<br>resp.encoding = <span class="hljs-string">'utf-8'</span><span class="hljs-comment">#将resp的编码改为utf-8</span><br><span class="hljs-built_in">print</span>(resp.text) <span class="hljs-comment">#得到页面源代码</span><br><span class="hljs-built_in">print</span>(resp.url) <span class="hljs-comment">#得到页面的url连接，当前为https://www.baidu.com/s?wd=python</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">网页爬虫初学——关于如何通过Python爬取网页源代码</summary>
    
    
    
    
    <category term="🐍Python" scheme="http://dayswithvenki.top/tags/%F0%9F%90%8DPython/"/>
    
    <category term="🕷️爬虫" scheme="http://dayswithvenki.top/tags/%F0%9F%95%B7%EF%B8%8F%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Weeks3</title>
    <link href="http://dayswithvenki.top/posts/weeks3.html"/>
    <id>http://dayswithvenki.top/posts/weeks3.html</id>
    <published>2022-04-30T09:18:02.000Z</published>
    <updated>2022-04-30T11:58:25.958Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7bb0f4fad50e9cacdf93170eea801d037b9fb1cf11a07f7859d5d8e5fd56deea">63a42796bbf34b019cf859df3c20cdcb55ca5f0aff747c059f86d25005abd62051fdd2e5792499db43577960fdcada77b86717dab7968954475e3fbd70aeaa8b9f67a29c124e1a58c57eaf0500bb9d277e031e6f415865373a848fe2727012468996e92e321b6774db2a7501075dc7c08173a4cfd058e9c1a00804674761ec4f3e62ea344e369c5a97453b9d52735397eaa05c2993ec4701d50c82751658bc04547426bc8a94fabcfd184ca988beb671528ef604b55f96a999b4ddbcb5a824561a89f7ef0f791d12451c06f5d6b80646059a02a206842321c1338b5c1d78d8487121019e5daf955b2fd5f54c8c87f235830a1dc19a80ed5a6556af99018525f3a07814473234e66c3b94a847aa8f282453f3fe0d3fad3303ab33124f7e178249e280c5663d8b7505b871798500256668b64ee326b980966e1959c3185f13898243a25973d70e23dddf7073e89afc917a7e8365b530dd33b85d61d811beb323886846264d399a5e008b3830a02e988144d1c8d40a8c0be76299b89724381708ff1d7f3743a9bf63294cddd17b2ee885bfef7258d975eee8e4432583002bc1d034e9d907ff18f04b4900d7b2c938767074e22085e20d953b9b4afc487473703ee857bddc36f4ff9af55da21a8b5f9eefe9a0e3dad4afc3a8997fa84bccf5a43366d15c7db289645a379e1ee47c5cfbaa9fcec9cf15518407126b498ebbccac7428542e76feb700e85100b3e68290b997b0e6f6d6148651f994f94837ad1f1c887305238c11cba4752690ce9a23aca08cfabfb579ec277918e0d801c2f0eb3121050e4140504e71583c0a122e651e730014c40714ec0cc4b634dec6bcbbb0badfd054cf6061224c4ca27046eb3aa692fde99ef84d066bc57c976e3ea5e0b3c6a23e0fa666066122963b55753ab028740a127b34ed4063c5ec4e3bc3c1d3286c635f9c00c3f8729311b641997cd5b6190bb67208ed4c673fc5c095cab561eebd069753d5ef027ab183e1cf94399f8ee605f6249d6539bb30fe7b09ece45ce0f34d8e77fce84c6c3ac04a58c518a9dcc8eba97d8005337c233846bf427db1f93cc86ebb730b5a0b7860058c3e94125f954300c7607fbaaa580fc28eb4a7dda1ba30a247b0fbed84d89139ce8f61b07306d6ba9e40a92b66b378a7d30af35aeed1ec77289f4d29465cab5e8c6bf246c3606b9882096b7f3ff1479610f73517acb3123694361d4408b0b983a01542bd47182062a9a50a9d91a4f84e6fac3af95a698b2042401671b4d9d620ec4985ea6e4a4fa7a1dfc8cda20dffacb80053da869a273f8ecd87b0092f5fc6183cf334fdd6d5b833ec0975c39fd136f9cd2b10dcb89509a557ba59e6eacacf30e4bdacfdd1df2e12f73349f3a48a02e66b948a6a68bfb981c10f8ed70f49641c490bfe0596cb2abe8225a69e427f06d6888327c5dac13d5a3970ae9eb7a6d3a84bc96ce7b2e2cc54de3c09eee455ed06a2962465004718762e686ac254c573e68a5164a819359d03c58f4169180fd94310facf75c00ed35a24ee770b40b23c09e51b2f6bf86d05ef715c27682eb43f7117fe92713bdb701af7a30b9b30b0e838dfff25512a396f40ff20705ee84deefffa25958c596508ba3a1c0d8100ca8d360fd6b793323e2bb7a158bc11f9830fcf355ec4e89f9d0f5142311d0c1adc07a7defcce36992946069726a4105e0b084b704a54d79673ab61ad7949ec5e213e21e9422ae41fe27ca7f772bd7bb1101b9dde6af584be1965dd9d3815d712b9ee77231aa14eae67cdb77fde67e11ddc06145c5199d47f85408d39d938e60683e3555f1ab6bc7a9a8670bb8b4090ac4616b90611514a785443ae1f8960d766f8e217b83291984650a74bbc13ec7d7ec0ac591f12319ccdb2fb8a751523e67733545e440777a1b9512790c503101758ad9da768a20f9c55dda69e6afea95f3e84b9c46efb31aa6386ce8b6053f68769ebac75a6726da048fae69c3c05e667e75fa20b34b37428682efc92eb1c287f2fae7e75c1ce5b386e7cbfc5de8ea50da86382c4a13477e8c4337ac1411e4ec7c83aa5a9cd40568a33f467227f31b74772acafb5b367376573d92b59a2c3e9932ef175c657af0785e20692636981549a901c98f4be386ec79465af38c96314322612dceacc8c87291475f8f3ba1380451f770f0ff4c7defbe054429e6b8adbc615cfc79c6f8fc9bfd60818a330729b88baff2bc706747112373d115b197771efce942ff63ee0885f3ab3e3702558d4a825c54d406f0d2da02d6dde9fcf7acca161f814a9483aacc28c08be00cfe538a07a4cf1e30301c5f3cf4bac77864c3cdae9583de5bdb6ca4f2c781a83915e98822691fc7899e5826446d0f2cceb05424f586703f183fbf74fefd3615a68b1ac16bd82936b79beafe343e7e53b464f95d8a464a023319ede0b1b6365dde2bce854064260a1bf6ec04d87f674c22c684d0ad0cca05422d5b974d85700298f50c6fb45f79631323397530808b52589d86614f0c178423d2711f914cd4e1e1bff33c26ab0e213d532d1028eac4d179c71d34330598ecf078668e2bfd26a79ed5ff90aff840d1b22e14204073b2d0268c5a159c55232786cc31b68c1c0fd8020e169ad2c6600aae10e9660c14e4eb1c2c0fc31189f8d19f5b2f1186e34cdf4455dd69b414bf746e3e35ef4b878c187990b734a1dd367b5110cb993886f61ed26a7e9d183d79a56e6ca6ac215037c2c591df103e73403cd0c71c66a3ec8d91c95a2232fb841529ee1650030e14ad5bcdf0923b7530599cd1d7a8ac5029cf4c68d7af9b11c44c67f071a2814500eb9034aee2bb7fc44fadbd127bdbc64af9dd7cef4a0edbaf9c93d3e4fcfcfcf305f45e076dca7a890c043913b584371c8a0b9e1344f4826bbdac82b5023e9d55c5c2b072effc2b441df195d1dfd88e12894d7c9a381490b3af294b5a5d78ed0f9e8f408beb748edb1c025ee578fcde7ba14f9dc1da1c7028d033c755779c629e0c45852c0e4943784616330ba54d1610ddc9f0815c5453058632473aab5764b42e8c31f309862f596ff812763854d773d2189c7a0bc5438c0294929cfae9a9c282dc0b21bf4c11b350667e4b705ad1eb628a0b0527fc83d689283be87f592cda607dbbd9c874ebc174dd44287278b61430317fc2de09257817b611c6b15c7696364008c1c74c2735066117397d445733a4de6b9b850f2a22af4d3f0dadc4a8458b7c87f27f2231567801cb07acaa506320dcbf6ce5bf0f720b9aea607a9e6346d53feaa71c933e0dddb2954f2cee0c3dd07aa3cb89a4452465ff47c78cf09f6ae178748ecdba3c5f0e99e04777dfcbb2719ff797d507f62a113d099c1e9c7decbc90f0e76feec958db7d9f83bb9f18422037c03fb2c3c9128944a1302308b86c7df6a4247296421198b9661b3a50c85998845a29d68f27ccd9cd295ef9a8ff5fe7d0e29c03d383276f11441412deba4d55f17bbcf397c08958ffdf462305453b2f38b0b0187cafa0d9c8c107d44c2b38c0ddc89d74e1d9dfd6484e41498258679eb6af21d79c27cc35acbc842f4bd2fe8cf53cf5c6e81fd8d83ad084b4f3f84981b363bc1f6ff54742bbd1f0ff80cee7b4a5d648870f8c9a2238273ced7047f2c25f0bddf1adfc3c815b060bbf85a58f6e1e463238b7377d5641e78658f448f4f31937cbb2a7170e25f52144499037ecf565a3f759c16f4b25430ea8d28e605a66b01fc29b5e0e8e601a89c600eb3ff96a623bc86a404272ce348d836592125a79b6cff32a39658549efa0393bfd2d975693954a4f2ebe8428b4d5eee4e82b5b50886635abcb93f70292bb8216a30798be659207121551916e12b712af5b924c194793ad890971279840e3aae543bf42c985e2f47df664bf6254ee246bf067a0a2890fc309d4329aa06281b4ea7f10c72a3bbc6eebaae441deeee85fdc2f8e29f25669fb5636bf4d5e2a75144aece77c0234eda233ca11509589a48019d70b36dd896f4a1424a7fcd92dac27dc67c975c64a6772a7def7e75b5cfe8e72bc94af717dc40ad905a04a34734896e9fb8159fb336846f8183cb7e5b77e4c0597bd145f4c0d76ff319878bdc4bf951f573581947128fe9047f11c082388509a3319fe31510610c38f6285870a55681a76e4d0cdcc2edeae93db5ec188a6340bc1211c7e0ba8fec357dafa493b741cc1965eb628f29528325665d680f7528bb1458292e8b21beaf5e1bb37a24dc081f94775ff8ff2c40dbeb157075684d4a8fe2448f2e5e57517b384caeb3bc71bef893dcc8a76fc0340de38fd81d8a2141c104b5c30bfb1f7d8552f9e086e11486e6ebea42803eb13cce27b9ea7563bd2853085208a7362ca59e0109b634fee893b53fad5eaf321149f79001841a16740ea199f8e95986b11e74df0835970f552660df278c33bad7155be4a6d9e0e22a564261394a69bd4c7d64c6ae8f92efa75d52110ec826b67dec61d70f6d95de68231d930e6228f4a7630cafa4ddec929971970d9bdafe267632e2f0d12c6a7aaa59e02b28f15680a57ee0d8d3de9bbb26371eed27c20ceecb48cc77509e318e12e36e000521666ef398c9e3cf229bb6e1748179f7ee85cac4a50c29efe42fe050fe762d9e51dcaa043fb984b60c87b3ecb4fd4409da9334d07d14d5996c0746349def5ed0bfa91a06823e4dfd86a4d207ef093785f3190ce39635038f5c64b9669a5e681ca44899aba5a204acb2627c2fe1bea39c507eac5c4b4875b072357bb307f8f5a1aa497cb36a18629b694ab6d2f7532dc16b6f6a6f95b90cda4a0ae33d0b20ca682d17888a8e1a86bdf227dcc33fcd050056a76be377b8856e126dc66241c3e694bae7c69b211d2c245fdac9634b8a2159853209005677b2fdf6cba58baf8fd6d464ea915cdf97c3500ac659d09151a2049519aabf29ca6fea9ffcb98b24be6c153f6e5c8e202a18ef611669dfc4d11edf74aa9c52cee3db2fd486c094ee7138daa3647d0f2b9913d3367e889b50dbb0b0f1965db72b5a0cb05d7a4460f4c004f5e6799eca06120f6724218336e1b25181f4b69695e9c52adb872fcee07e66a677b60e23d8ee9755a192514884692c1a967318599996144c83544d37bf98dbd249a4b5136d877ddea140d6819d7b06722ad97eb7eed2f3f2f759b50ccd45b77946dad1639d58105454a4806802403efb6991d635da1019338ce6c73e7493dc22dbc88da10849f1d2ef52e93ac089800418abb5c4067c59d3631dbc42b19ccd0c55fc088c2d8057b105dfa8f8e78e3d31015cda6418406ca11a2c93ba8a68856867b2103a550eb9f096fa23d28d37c8dfeef7cfae3f62bef7e107e171ea603bc1ca5b9b4b5ebb1a056c902c2ffce010970f65de891ee46ea5fbe3ad80fd0c06c1b3aaa9b9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Days" scheme="http://dayswithvenki.top/categories/Days/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机网络1</title>
    <link href="http://dayswithvenki.top/posts/net1.html"/>
    <id>http://dayswithvenki.top/posts/net1.html</id>
    <published>2022-04-25T08:50:23.606Z</published>
    <updated>2022-07-02T06:42:34.573Z</updated>
    
    <content type="html"><![CDATA[<h2 align="center" id="公式">    公式:</h2><script type="math/tex; mode=display">奈氏准则: 码元传输的最高速率 = 2W (码元/s)</script><script type="math/tex; mode=display">信噪比(dB) = 10\log_{10}{S/N} (dB)</script><script type="math/tex; mode=display">香农公式: C = W\log_2{(1+S/N)} (bit/s)</script><div class="note info simple"><div align="center">    W为信道宽度,S为信道内所传信号的平均功率,N为信道内部高斯噪声功率.<br></div></div><h3 id="意义">意义:</h3><div align="center">    奈氏准则:激励不断探索先进的编码技术,是每一个码元携带更多比特的信息.<br>    香农公式:告诫不可能突破信息传输速率的绝对极限.</div><hr><h2 align="center" id="cdma工作原理">CDMA工作原理:</h2><p>&nbsp;&nbsp;1.将每一个比特时间划分为m个短的间隔,称为码片.</p><p>&nbsp;&nbsp;2.为每个站指派一个唯一的m bit码片序列.</p><p>​    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1)发送比特1: 发送自己的m位码片序列.</p><p>​    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(2)发送比特0: 发送该码片序列的二进制反码.</p><div class="note info simple"><p>eg: S的8 bit 码片序列为 00011011.</p><p>1 -&gt; 00011011</p><p>0 -&gt; 11100100</p><p>码片序列: (-1 -1 -1 +1 +1 -1 +1 +1)</p></div><p>每个站分配的码片序列：各不相同，且必须互相正交。<br></p><p><font color="red">正交：</font>向量 S和T的规格化内积 等于0 。</p><p><img src="https://s2.loli.net/2022/04/30/bkguQ1HjBPqREZA.png"></p><p>任何一个码片向量和该码片向量自己的规格化内积都是1 。</p><p>一个码片向量和该码片反码的向量的规格化内积值是-1。</p>]]></content>
    
    
    <summary type="html">计算机网络 第二章笔记</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>像素插画2</title>
    <link href="http://dayswithvenki.top/posts/genshin.html"/>
    <id>http://dayswithvenki.top/posts/genshin.html</id>
    <published>2022-04-17T11:16:29.252Z</published>
    <updated>2022-07-13T07:05:59.472Z</updated>
    
    <content type="html"><![CDATA[<h1 align="center" id="像素插画2">    <font color="#A9BFE3">像素插画2</font></h1>  <p><img src="https://s2.loli.net/2022/04/17/jmTBSL2lNfXnGAs.png" alt="image.png"></p><h2 id="胡桃">    胡桃:</h2><p><img src="https://s2.loli.net/2022/04/17/OlMTq5i9xoN4W6B.png" alt="pixil-frame-0 _62_.png"></p><h2 id="甘雨">    甘雨:</h2><p><img src="https://s2.loli.net/2022/04/17/fLUZzdxYl95bFvW.png" alt="pixil-frame-0 _69_.png"></p><h2 id="魈">    魈:</h2><p><img src="https://s2.loli.net/2022/04/17/5TuRrHKWC7xISBv.png" alt="pixil-frame-0 _75_.png"></p><h2 id="宵宫">    宵宫:</h2><p><img src="https://s2.loli.net/2022/04/17/MbgN8zFRr6pe2Bk.png" alt="pixil-frame-0 _71_.png"></p><h2 id="神里">    神里:</h2><p><img src="https://s2.loli.net/2022/04/17/7STxAz6sHEvi3DR.png" alt="pixil-frame-0 _76_.png"></p><h2 id="万叶">    万叶:</h2><p><img src="https://s2.loli.net/2022/04/17/yrD3hMNd8ZzQjC6.png" alt="pixil-frame-0 _73_.png"></p>]]></content>
    
    
    <summary type="html">Genshin Impact</summary>
    
    
    
    <category term="插画" scheme="http://dayswithvenki.top/categories/%E6%8F%92%E7%94%BB/"/>
    
    
    <category term="🎨像素画" scheme="http://dayswithvenki.top/tags/%F0%9F%8E%A8%E5%83%8F%E7%B4%A0%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>阅读方法</title>
    <link href="http://dayswithvenki.top/posts/english1.html"/>
    <id>http://dayswithvenki.top/posts/english1.html</id>
    <published>2022-04-11T14:39:18.179Z</published>
    <updated>2022-07-13T06:23:58.921Z</updated>
    
    <content type="html"><![CDATA[<h2 align="center" id="01阅读方法">01.阅读方法</h2><h3 id="一-先题后文再看题干不看选项">一、先题后文，再看题干，不看选项</h3><p>why?(先题后文)<br></p><p>1.解题 2.串联题干 -&gt; 预判主旨~（题干中反复提到）~3.通读全文</p><p><img src="https://s2.loli.net/2022/04/11/OngewX2bKB7WvmF.png" alt="image.png" style="zoom:50%;"></p><h3 id="二">二、</h3><p>做阅读理解除了翻译外，需要关注:</p><p>1.感情色彩强烈的词: adj,adv,n(系动词之后)</p><div class="note danger simple"><p>[认识单词!!]</p></div><hr><h4 id="真题">[真题]</h4><p>1.</p><p><img src="https://s2.loli.net/2022/04/11/fzgyF8VxlZCUtk9.png" alt="image.png" style="zoom:50%;"></p><div class="note danger simple"><p>最经常出现的词有Job，但是容易忽略agent。（不能顾此失彼）</p></div><p>job&lt;-&gt;agent关系:</p><p>&nbsp;&nbsp; 第4题: agent offer each job hunter… options.</p><hr><p>2.</p><p><img src="https://s2.loli.net/2022/04/11/DeIcGQpWaUsFZNV.png" alt="image.png" style="zoom:50%;"></p><div class="note warning simple"><p>虽然一般不看选项，但是若选项中有共有的信息,则不为干扰信息为正确信息。</p></div><p><img src="https://s2.loli.net/2022/04/11/yO4BRmL3IPDjsEw.png" alt="image.png" style="zoom:50%;"></p><p>如本题: Women/Stress，有助于帮助判断（提示）中心思想。</p><div class="note success simple"><p>1.串联题干 2.通读全文 3.the best title</p><p>(读一段做一题∵题文同序)</p></div><hr><p>不熟或者不认识的词汇:</p><div class="checkbox green"><input type="checkbox">            <p>predominance 统治地位</p>            </div><div class="checkbox green"><input type="checkbox">            <p>manifest 显示</p>            </div><div class="checkbox green"><input type="checkbox">            <p>revival 进步、振兴</p>            </div>]]></content>
    
    
    <summary type="html">考研英语笔记</summary>
    
    
    
    
    <category term="📖考研英语" scheme="http://dayswithvenki.top/tags/%F0%9F%93%96%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>Weeks2</title>
    <link href="http://dayswithvenki.top/posts/weeks2.html"/>
    <id>http://dayswithvenki.top/posts/weeks2.html</id>
    <published>2022-04-03T10:45:02.000Z</published>
    <updated>2022-05-19T02:14:00.951Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0b18fcefde2ad43e037b36efd472e312abc2ec223505f8b85b6701125e71b21e">63a42796bbf34b019cf859df3c20cdcb55ca5f0aff747c059f86d25005abd62051fdd2e5792499db43577960fdcada77b86717dab7968954475e3fbd70aeaa8b38cecdc214b9de0d7ccd1c4a2e1788472e400e1e9331f6e5f3ab8fbf9ccf413a917d277b93221c3ac289bcf6c1067a0ea3cb5e2eab081123fc1a32c9cc488e4abef2bd0e5fe6c4fbe8c6f5db4eb6b5b3c73db25bc601c88e15ddc22eb6cf1d1d776e1e327c2dcaf3e716a2d28f8e35c214989e6ea3ad545bad6924f0befab9c9b017808666a33e5a451af2bca7c353bd9aad77a17a468b55277e023fde0f0a84d4f2e80a894274e91a789f6324d26598e2441d2a6ab11c1cfecb114ccc8bc5b54cd3a7fa7d7491d75870e497b148e506d241968886456fe7d90d71074adb5d002cd36f5844186a085e63bb2f1b64c2ade3095f889a309a285c705012fd177f0ad1fe034ebc17cc8b92823e81b43feb08fe71d2f5c963a350f2469375136218b0b12f10657387615536c42c9af6d8acb8a826bbc842157008f7e635ff3ccb9dc77c71e8f42eb9dbd449db2901427f4e971908b2f54cd27e5a6e89f971b46fe8dea37b76b0c276cc04831d3a749a29ebf65fd7630c4a26709669e03285030dcd5bdf985ab5ba0c19e9147670c176c963fb6e50aaf8ce5de31ad9c58ca1226a0b71365d086bb5b9c49bce203156f6d6b2d9c8f2f8c8a8c137861c10e3d172b90b50ef627670cd6bff055b07a2d726c99f2e032ae376e221611ddb7097d71a1aad1d2e67eff3b45b9a230a616c54927f2fbb880c38a62715866d8e325aa4ad84fd0c55cd2ab707149c1138a8226c7fa06abe09bf830ae906769cdbfaa113ecbb0109f3a724c6cfcb99612e8d3e280f8cab243023b52b6cb0208b06eca2722e3b06fb57e2d44a3910737862d06893438803cab98afa1e5a2935fec8a0296be4ab8f4a6ce72bb4ab6d979b7d55f88cb213f74a4072d57caa2fb8e671b3e33c29ef6b1ee5b4434f0b88053b4788646854a1f37becba285c2db1eb489ee5bb735a4dc4199dc5eb8fafa767d5332c3deadf20caf44718cc56d442af3e7a3b97e556b8401d0aa4742d985899779d28bed82c4f425984df7f979c7156971755a29af88788cd979c50817c126680588d1247a58db93434e18d72b7f32cc5b957057a1f25db58d3c5e9a85968b3a7587090d24ec08059bf412f96e257d74ed799e8ebd5bf6585fc0329a6a1ab69f87dfa37b03019ebfc3fac28ad475de3337d8393a989dc6cda6896bbb267342a86605787be3db85a8301bae12d33252d83ed4a6d2b037b017273abd904fda1b5fcdc9f799a191230b64e2376e670f62377761be44d845959f2d94649c98c7c330ec5161a69f97ff17db4fdcfd7fc20d0559aca4decb7ca749d1d556319cd2e43b33779f6fa04ca032a10584e4ecad901f3fe05e54b3a7364a7bdb454a45d790da1f93084cb34ac79d673e65ef7a54430d756ecb1e58d71c0b0601b536cb60f56768b4bc95910c2e28ca7b449e5c90f6dc245a0a6e31a627d4ad6aa74193a4a1533570554a162006623adce0d652272056093a7bfeaf125e13fcf2e6782bd4a544a0787eb6f727ad1129189ca2e5b86a2f26e86ba1716c6d004283a8a061f1c40fb00eb7fcad1b5ba2a88cbb8f3968bb1acbddeb727fdf877828f540dbc510ff80c349a39ee6c95db0f892790d74aa516995437b888be24015a8858b9c14391953f1f667b18513db0c1193caba2bf9358f7cea4ecebbb3849049e912aa849b9f5300a6a3c8d8243b3c59552f69f8ae80c00f648968be45e1927c5fd28ab6f7f9debb83b9ea0ca88380285cd0fe8e7afa366b7cddf9a9d7b96181c825b5e16b3bc05ce9d048ab5afaa34accb55de7d3e8a8aa2989b8fb3e93c3cfe56534951b9e03a8b2004f9440769f439700722e5d7677a0fe58b4dac58a392b9030f0d5a1ce3dcae6be74928bfcf887376953d3cf6cb4237353db1e3133532114fdc97afe2f7b2506efe44373b38a687aeeb7bdcaf7651c0236e6d060a8f77cfc895c401242ab11bff305b51dad433cfdae89d3bf93802f8ff4db90ced85837f17836639b37092bd97e369bbeb50fae7956dadf3b824ffecd54fadc8baf347f3eeffc555750f06bbc4f9a56d047f944c33f33eeec7d313a3e73e036d1bacbef06413759e14c5f7f455dde11d88a7b7f1824f0fb696dd343eef9066c2f62f55884e6e019cab776a931a3e0d42c98e35c208024c0daf51d4e33279d352a9aa8a5239726765cfe00689157d793d8dd314548506ef9cbc748b226ca6eb08e0ffb0487f08b981722cc856a23078cb3093db371579559d3f1fc3bfab2fa99b6810b1f211b09cf3365d04aabe7bdd9536f602a54d1df32aae6051f06a121a7b2703c56acc741b797e8581e7eb0d2bf59585012411a5ef19d706df32e4f2a72b3b5cfaf2c7277fa5f54ec98ce980d6629885541fefc007f5bb12a3be2b284a1fc335ddc7062d6dd937c4f5725f8f699eb085cfb9c8ccef9295a33ae757886997cf5242d36f0f4d843faaaaf87138334c1e4b6301df735d4f448f717b58fd220b9869f83f1431c0b7b3ad34c728b31c1a70a9cbad14544792d0f0dc82a8bc7d3542f1753f86a6c8453ce857acaa740647d82d04651c9ce0f57bb3dc7c67d416c3513203b44e66e1a706d66669a97135fa96feb6e2ae47a5327fcc6c36ed464f1456c95d6891118723e977361ef6ac5a94956677faac53d8c7b36f911077d4a58202d723b3901d002844aefabdc005888329095dab5f6e9cf77ffb6ca9dc0d7e4264b1292d3502eab7236c1d6c96c6d916898eb749da143faedd422ef1fd6307477a60eeb110f5cf05b7aba52b731eb5737460c9be3ae45c1d13211a8e4fd986edebcc18f24a6e35566d6e4d55e8881ff4888b9b7d4cc4273e9789b9e3bef3ccbc7e634aedb0dfc1db9d31f470609adc46b06a12026c949a482e4e7d4f9e2e8f50d9d87cd1488dd898638d9ad2b57e227dd31be58f70f393ea0dbde5b06beb15fcfe325902380dbffe714346257d830dd4869206bb174356ee2ebe3e199e4d97c57b8377e1d6c62f8282e5bd5455dca54380b32eeec8bcdb67b67942a44f8038a7993daa917dbbe7643de1c3667fbaf43e6621ae4c8eb7cc87e978669db5fc39b1a5ac199c6b0290b3178924e11554cc90714f22cce57f659eacc6a11337dce447c721d1c9301b86be7d50aee47411f7f022873c9299490457a1ba13f92cea1ea8ee73efd538be144ab230df912dbc9c437171e2a290dfcb56257de31d24f94da45ae85c0c482e7cd7b573a42f865b7e78f7634dc54423d8176f433df2ac1a65cfb10a0a5e30ec1f70704923ba0b88f759678b22722171dfbfa3c8d6ddce4ea624f1607a3fbef81797c44883deeaa7bdd407404fb1d4026ad4ac6c024d3e79ae097fe6d1f82dcb3f0470e48192209f7f90ccd39d9a10618b3759b6e3f92673be8e4e9738880481171961e3ad6f38e1a68b8e315605437f423c66c762ddb5b7d43ecd56dcd4b7bef9a71ddc09992904ae58f33cd9b7a0efb1b127d462c31c0b5ff142f70d9ade0e0ce2dd7572e13cdc1bf177ae04526de8f4fa5a2416744e2a4cc252b62e44286b34e048d398a432e85684e79797650c6ab67d77543394e0e791771833337bf962030a71f43d9690bef38552f0a7e03127aaf88b478c963d7cb7c55ce784fca8c0c5b6824f98b7351df76e2f0454978648c955878ccb18a40e0596002442a26da808137095310775c1634bc7edf8f44af80900019ff4e1d1abdcd5bcd65f6645796afd819b293753d41fc27589b15b1a21be9fe4fd2e6c24c25f08f740c1689cb75cd4834bc61a1c073abe2ee4bdd7c4634a8da8b56657b919c6e1306054efcf4ab38c597586878193a07176e2084b9cbb89708465a4023f6cc22caa4fe124a243be99d7558738e7516e75901bbfed85ee30939fd13ef1a1069302f289b4c7f1ffdb5d4c9b0ee7123e0578423f3c612c19f64f5b6a4ae8bafc0db1f626f44755dba87c929a25978948eb48903a72c31fccb7514dcfeac08705dfc7c7ac2cff3104c20d3c7b0d83fdbf9ae62758aa78b60371b85bbe730a2c98caf0ea23afae952af65622d2b5dbf4806fe73fd3a77cab3be7beadc48fe1126e9abcd4b7b01198b8a6143a5cbef37356ba5594680527183f386a30237d59629fec7ddd887ebcb1b964291419576067e0f0f09daf7bced06cea77a7025220190155229c7ec12575ee985e7e602d8aa0dad1e2ea57db7a2dfd818bfd72ca92b2e305e33465dcd0e89fdbca8f45dc0bd2ec50607db0808126895889e85f9f68e9239e692c01bf92e66a462cbd643be8f16b9219bf5528c0eb80cd90a9239b9744969d05a4623ba9bfe15f5fe5847784f3fc85762d4353cf3536740858e8d9a84f7d517caf4ca88521f8b2e71368191ebe187ed409091ebe9be8107d37bc51e05608f67075e69913844a4771495ff86c1762dce07a7c109b49a0d5aa6d94fa663197280a86a868cc468c1922afb7f7b621af1ab89c226e99fae3f7fe5ec96f60c264ef71b1b0f4d6c3ecc2b847a08b9a5f4edd1bd1b5b9fc2297ffb6f273c0bc5ccc1839aebfa8beba00fa10617ca0133aea466512d2a9bffc9d1718474c6733bc1c959dc4aabe56c367c51986eac1ca86a3653c857a24</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Days" scheme="http://dayswithvenki.top/categories/Days/"/>
    
    
  </entry>
  
  <entry>
    <title>美化记录</title>
    <link href="http://dayswithvenki.top/posts/butterfly.html"/>
    <id>http://dayswithvenki.top/posts/butterfly.html</id>
    <published>2022-03-28T06:44:25.000Z</published>
    <updated>2022-07-09T03:46:37.720Z</updated>
    
    <content type="html"><![CDATA[<h2 id="美化记录"><a href="#美化记录" class="headerlink" title="美化记录"></a><div align="center">美化记录</div></h2><h3 id="toc无法跳转问题"><a href="#TOC无法跳转问题" class="headerlink" title="TOC无法跳转问题"></a>TOC无法跳转问题</h3><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ee9f63;">预览效果    </button><div class="hide-content"><p>无</p></div></div><p><a href="https://convivae.top/posts/hexo-bo-ke-cai-keng/#%E6%96%B9%E6%B3%95-2">参考文档</a></p></div><h3 id="侧边栏botui"><a href="#侧边栏BOTUI" class="headerlink" title="侧边栏BOTUI"></a>侧边栏BOTUI</h3><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ee9f63;">预览效果    </button><div class="hide-content"><p><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/show/botui.png" alt="botui"></p></div></div><p><a href="https://akilar.top/posts/9dc1acf8/">参考文档</a></p></div><h3 id="文章置顶轮换栏"><a href="#文章置顶轮换栏" class="headerlink" title="文章置顶轮换栏"></a>文章置顶轮换栏</h3><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ee9f63;">预览效果    </button><div class="hide-content"><p><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/show/swiper.png" alt="swiper"></p></div></div><p><a href="https://zfe.space/post/hexo-swiper.html">参考文档 </a></p></div><h3 id="侧边栏碎碎念页面碎碎念artitalk-pro"><a href="#侧边栏碎碎念-页面碎碎念Artitalk-Pro" class="headerlink" title="侧边栏碎碎念+页面碎碎念Artitalk Pro"></a>侧边栏碎碎念+页面碎碎念Artitalk Pro</h3><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ee9f63;">预览效果    </button><div class="hide-content"><p><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/show/artitalk.png" alt="artitalk"></p></div></div><p> <a href="https://akilar.top/posts/f1004b1d/">参考文档</a></p></div><h3 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h3><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ee9f63;">预览效果    </button><div class="hide-content"><p>无</p></div></div><p><a href="https://akilar.top/posts/615e2dec/">参考文档</a> </p></div><h3 id="右键菜单"><a href="#右键菜单" class="headerlink" title="右键菜单"></a>右键菜单</h3><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ee9f63;">预览效果    </button><div class="hide-content"><p><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/show/rightmenu.png" alt="rightmenu"></p></div></div><p><a href="https://dorakika.cn/p/20220303.html">参考文档</a> </p></div><h3 id="作者介绍"><a href="#作者介绍" class="headerlink" title="作者介绍"></a>作者介绍</h3><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ee9f63;">预览效果    </button><div class="hide-content"><p><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/show/author.png" alt="author"></p></div></div><p><a href="https://akilar.top/posts/e5cda1b6/">参考文档</a> </p></div><h3 id="首页磁贴"><a href="#首页磁贴" class="headerlink" title="首页磁贴"></a>首页磁贴</h3><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ee9f63;">预览效果    </button><div class="hide-content"><p><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/show/magnet.png" alt="magnet"></p></div></div><p><a href="https://akilar.top/posts/a9131002/">参考文档</a> </p></div><h3 id="custom-beautify"><a href="#Custom-Beautify" class="headerlink" title="Custom Beautify"></a>Custom Beautify</h3><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ee9f63;">内容记录    </button><div class="hide-content"><p>·阿里IconFont引入 </p><p>·侧边栏透明</p><p>·公告小人 </p><p>·页脚不同时间不同显示的柴柴 </p><p>·页脚皮卡丘 </p><p>·网站各种像素画</p><p>·文字/图标颜色自定义，字体像素风</p><p>·加载动画: Loading/日夜转换</p><p>·夜间模式背景流星</p></div></div></div>]]></content>
    
    
    <summary type="html">网页美化记录</summary>
    
    
    
    <category term="HEXO" scheme="http://dayswithvenki.top/categories/HEXO/"/>
    
    
    <category term="🦋Butterfly" scheme="http://dayswithvenki.top/tags/%F0%9F%A6%8BButterfly/"/>
    
  </entry>
  
  <entry>
    <title>算法课笔记2</title>
    <link href="http://dayswithvenki.top/posts/algorithm3.html"/>
    <id>http://dayswithvenki.top/posts/algorithm3.html</id>
    <published>2022-03-25T15:52:40.000Z</published>
    <updated>2022-07-06T02:02:53.558Z</updated>
    
    <content type="html"><![CDATA[<h1 align="center" id="数学预备知识">    数学预备知识</h1><h2 id="典型求和公式">    典型求和公式</h2><p>1.<script type="math/tex">\sum_{i=1}^{n} i=n(n+1)/2=\Theta(n^2)</script></p><p>2.<script type="math/tex">\sum_{i=1}^{n} (a+bi)=na+bn(n+1)/2=\Theta(n^2)</script></p><p>3.<script type="math/tex">\sum_{i=1}^{n} i^2 = \frac{n(n+1)(2n+1)}{6} =\Theta(n^3)</script></p><p>4.<script type="math/tex">\sum_{i=1}^{n} i^k = \Theta (n^k +1)</script></p><p>5.<script type="math/tex">\sum_{i=1}^{n} a^i = \frac{1-a^{n+1}}{1-a}=\Theta (a^n) ,(a \neq 1)</script></p><p>特别的：</p><p>6.<script type="math/tex">\sum_{i=1}^{n} a^i = 1/(1-a) , (|a| < 1)</script></p><p>7.<script type="math/tex">\sum_{i=1}^{\infty} a^i = \Theta (1) ,  (|a| < 1)</script></p><p>8.<script type="math/tex">\sum_{i=1}^{n} ia^i = \Theta (na^n) ,(a \neq 1)</script></p><p><br></p><p><br></p><p></p><h2 id="积分图像求边界"><br>    积分图像求边界</h2><br><div class="note info simple"><p>条形图是<script type="math/tex">\sum</script>,曲线是<script type="math/tex">\int</script></p></div><p></p><p><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/math/%E7%AE%97%E6%B3%951.png" alt></p><p><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/math/%E7%AE%97%E6%B3%952.png" alt></p><div class="note info simple"><p>如果f(x)是单调递减的，则：</p><script type="math/tex; mode=display">\int_{m}^{n+1} f(x) dx \leq \sum_{j=m}^{n}f(j) \leq \int_{m-1}^n f(x)dx</script><p>如果f(x)是单调递增的，则：</p><script type="math/tex; mode=display">\int_{m-1}^{n} f(x) dx \leq \sum_{j=m}^{n}f(j) \leq \int_{m}^{n+1} f(x)dx</script></div>]]></content>
    
    
    <summary type="html">算法课笔记</summary>
    
    
    
    <category term="算法设计与分析" scheme="http://dayswithvenki.top/categories/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
    
    <category term="🖥️算法设计与分析" scheme="http://dayswithvenki.top/tags/%F0%9F%96%A5%EF%B8%8F%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>算法课笔记1</title>
    <link href="http://dayswithvenki.top/posts/algorithm2.html"/>
    <id>http://dayswithvenki.top/posts/algorithm2.html</id>
    <published>2022-03-25T02:43:40.000Z</published>
    <updated>2022-07-07T08:26:04.843Z</updated>
    
    <content type="html"><![CDATA[<p></p><h1 align="center" id="1时间复杂性">    1.时间复杂性</h1><br><div class="note success simple"><font color="green">最优算法: 时间复杂性O(n log n),空间复杂性O(1)</font></div><p></p><h2 id="1o符号上界">    <font color="#a9bfe3">1)$O$符号(上界)</font></h2><p>  令f(n)和g(n)是从自然数集到非负实数集的两个函数，若存在一个自然数<script type="math/tex">n_{0}</script>和一个常数c&gt;0，使得:</p><script type="math/tex; mode=display">{\forall}n\geq n_{0},f(n)\leq cg(n)</script><p>则f(n)为$O$(g(n))。</p><p>  若&nbsp;&nbsp;<script type="math/tex">\lim_{n\to \infty}\frac{f(n)}{g(n)}</script>  存在</p><p>那么:</p><script type="math/tex; mode=display">\lim_{n\to\infty}\frac{f(n)}{g(n)}\neq \infty 则: f(n)=O(g(n))</script><p><br></p><p><br></p><h2 id="2omega符号下界">    <font color="#a9bfe3">2)$\Omega$符号(下界)</font></h2><p>  令f(n)和g(n)是从自然数集到非负实数集的两个函数，若存在一个自然数<script type="math/tex">n_{0}</script>和一个常数c&gt;0，使得:</p><script type="math/tex; mode=display">{\forall}n\geq n_{0},f(n)\geq cg(n)</script><p>则f(n)为$\Omega$(g(n))。</p><p>  若&nbsp;&nbsp;<script type="math/tex">\lim_{n\to \infty}\frac{f(n)}{g(n)}</script>  存在</p><p>那么:</p><script type="math/tex; mode=display">\lim_{n\to\infty}\frac{f(n)}{g(n)}\neq0则 f(n)=Ω(g(n))</script><p><br></p><p><br></p><h2 id="3theta符号">    <font color="#a9bfe3">3)$\Theta$符号</font></h2><p>  令f(n)和g(n)是从自然数集到非负实数集的两个函数，若存在一个自然数$n_{0}$和常数$c_1,c_2$使得:</p><script type="math/tex; mode=display">{\forall}n\geq n_{0}, c_1g(n)\leq f(n) \leq c_2g(n)</script><p>则f(n)为$\Theta$(g(n))。</p><p>  若&nbsp;&nbsp;<script type="math/tex">\lim_{n\to \infty}\frac{f(n)}{g(n)}</script>  存在</p><p>那么:</p><script type="math/tex; mode=display">\lim_{n\to\infty}\frac{f(n)}{g(n)}=c则 f(n)=\Theta(g(n))\quad\quad(其中c\geq 0)</script><div class="note info simple"><p>Summary: 可以认为$O$类似于 $\leq$, $\Omega$类似于$\geq$,$\Theta$类似于=</p></div> <h2 id="举例">    <font color="#a9bfe3">举例:</font></h2><h3 align="center" id="fnlogn2"><font color="#ffa516">$f(n)=\log{n^2}$</font></h3>$$\because \lim_{n\to\infty}\frac{\log{n^2}}{n}=\lim_{n\to\infty}\frac{2\log{n}}{n}=\frac{2}{\ln{2}}\lim_{n\to\infty}\frac{1}{n}=0 \\\\$$$$\therefore f(n)=O(n)\quad but \quad not \quad \Omega(n) or \Theta(n)$$$$\because \log{n^2}=2\log{n} \therefore\log{n^2}=\Theta(\log{n}) \\\\    \therefore \log{n^k}=\Theta(n)\\$$<br><h3 align="center" id="sum_j1nlogj"><font color="#ffa516">$ \sum_{j=1}^{n}\log{j}$</font></h3><br>$$\because \sum_{j=1}^{n}\log{j} \leq \sum_{j=1}^{n}\log{n}$$$$\therefore \sum_{j=1}^{n}\log{j} = O(n\log{n}) $$$$又  \because \sum_{j=1}^{n}\log{j} \geq \sum_{j=1}^{\frac{n}2}\log{\frac{n}2}=\frac{n}{2}\log{\frac{n}2}=\frac{n}{2}\log{n} -\frac{n}{2}$$$$\therefore \sum_{j=1}^{n} = \Omega(n\log{n})$$$$\therefore \sum_{j=1}^{n} = \Theta(n\log{n})$$<br><h3 align="center" id="logn"><font color="#ffa516">$\log{n!}$</font></h3><br>$$\because \log{n!}=\log({n*(n-1)*\dots*1})=\log n *\log(n-1) *\dots*\log 1=\sum_{j=1}^{n}\log j$$$$\therefore \log n! = \Theta (n\log n)$$<h2 id="3o符号">    <font color="#a9bfe3">3)$o$符号</font></h2><script type="math/tex; mode=display">f(n)=o(g(n))当且仅当f(n)=O(g(n)),g(n)\neq O(g(n))</script><div class="note info simple"><p>用f(n)$\prec$g(n)表示f(n)是o(g(n))的：</p></div><script type="math/tex; mode=display">1 \prec \log \log n \prec \log n\prec \sqrt n \prec n^{\frac3 4}\prec n\prec n\log n \prec n^2 \prec n! \prec2^{n^2}</script>]]></content>
    
    
    <summary type="html">算法课笔记</summary>
    
    
    
    <category term="算法设计与分析" scheme="http://dayswithvenki.top/categories/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
    
    <category term="🖥️算法设计与分析" scheme="http://dayswithvenki.top/tags/%F0%9F%96%A5%EF%B8%8F%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>LaTeX语法(下)</title>
    <link href="http://dayswithvenki.top/posts/latex2.html"/>
    <id>http://dayswithvenki.top/posts/latex2.html</id>
    <published>2022-03-24T11:17:31.982Z</published>
    <updated>2022-07-06T02:08:49.090Z</updated>
    
    <content type="html"><![CDATA[<h1 align="center" id="latex语法">    <font color="#A9BFE3">LateX语法</font></h1><div class="note primary simple"><p>由于内容过多,分为两篇来写</p><p>上一篇 <a href="http://dayswithvenki.top/posts/latex1.html">http://dayswithvenki.top/posts/latex1.html</a></p></div><h2 id="7箭头符号">    7)箭头符号:</h2><div class="note simple"><p>​                \leftarrow , \rightarrow ,\leftrightarrow,\longleftarrow,\longleftrightarrow,\longrightarrow</p><div align="center">\Longleftarrow,\Longleftrightarrow,\Longrightarrow</div></div><script type="math/tex; mode=display">\leftarrow , \rightarrow ,\leftrightarrow,\longleftarrow,\longleftrightarrow,\longrightarrow</script><script type="math/tex; mode=display">\Longleftarrow,\Longleftrightarrow,\Longrightarrow</script><p>箭头上加内容:</p><div class="note simple"><div align="center">\xleftarrow和\xrightarrow可根据内容自动调整</div></div><script type="math/tex; mode=display">\xleftarrow{x,y,z} 和 \xrightarrow{x,y,z}</script><h2 id="8注音和标注">    8)注音和标注</h2><div class="note simple"><p>\bar{x}, \acute{x}, \mathring{x}, \vec{x}, \grave{x},  \breve{x}, \hat{x}, \tilde{x}</p><p>\dot{x},  \ddot{x} , \dddot{x} </p></div><script type="math/tex; mode=display">\bar{x}, \acute{x}, \mathring{x}, \vec{x}, \grave{x},  \breve{x}, \hat{x}, \tilde{x},\dot{x},  \ddot{x} , \dddot{x}</script><h2 id="9分隔符">    9)分隔符</h2><div class="note simple"><p>\overline{xxx}, \overleftrightarrow{xxx}, \underline{xxx}, \underleftrightarrow{xxx}, </p><p>\overleftarrow{xxx}, \overbrace{xxx},  \underleftarrow{xxx}, \underbrace{xxx}, </p><p>\overrightarrow{xxx}, \widehat{xxx},  \underrightarrow{xxx}, \widetilde{xxx}</p></div><script type="math/tex; mode=display">\overline{xxx},\overleftrightarrow{xxx},\underline{xxx},\underleftrightarrow{xxx}</script><script type="math/tex; mode=display">\overleftarrow{xxx}, \overbrace{xxx},  \underleftarrow{xxx}, \underbrace{xxx}</script><script type="math/tex; mode=display">\overrightarrow{xxx}, \widehat{xxx},  \underrightarrow{xxx}, \widetilde{xxx}</script><h2 id="10省略号">    10)省略号</h2><div class="note simple"><p>省略号用 \dots \cdots \vdots \ddots表示 ，\dots和\cdots的纵向位置不同，前者一般用于有下标的序列</p></div><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span> x<span class="hljs-built_in">_</span>1, x<span class="hljs-built_in">_</span>2, <span class="hljs-keyword">\dots</span>, x<span class="hljs-built_in">_</span>n<span class="hljs-keyword">\quad</span> 1,2,<span class="hljs-keyword">\cdots</span>,n<span class="hljs-keyword">\quad</span> <span class="hljs-keyword">\vdots</span><span class="hljs-keyword">\quad</span> <span class="hljs-keyword">\ddots</span> <span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">x_1, x_2, \dots, x_n\quad 1,2,\cdots,n\quad \vdots\quad \ddots</script><h2 id="11空白间距">    11)空白间距</h2><div class="table-container"><table><thead><tr><th>语法</th><th style="text-align:left">格式</th><th>实例</th><th>显示</th></tr></thead><tbody><tr><td>quad空格</td><td style="text-align:left"><code>a \quad b</code></td><td><img src="https://math.jianshu.com/math?formula=a%20%5Cquad%20b" alt="a \quad b"></td><td>一个<em>m</em>的宽度</td></tr><tr><td>两个quad空格</td><td style="text-align:left"><code>a \qquad b</code></td><td><img src="https://math.jianshu.com/math?formula=a%20%5Cqquad%20b" alt="a \qquad b"></td><td>两个<em>m</em>的宽度</td></tr><tr><td>大空格</td><td style="text-align:left"><code>a \: b</code></td><td><img src="https://math.jianshu.com/math?formula=a%5C%3Ab" alt="a\:b"></td><td>1/3<em>m</em>宽度</td></tr><tr><td>中等空格</td><td style="text-align:left"><code>a \; b</code></td><td><img src="https://math.jianshu.com/math?formula=a%5C%3Bb" alt="a\;b"></td><td>2/7<em>m</em>宽度</td></tr><tr><td>小空格</td><td style="text-align:left"><code>a \, b</code></td><td><img src="https://math.jianshu.com/math?formula=a%5C%2Cb" alt="a\,b"></td><td>1/6<em>m</em>宽度</td></tr><tr><td>没有空格</td><td style="text-align:left"><code>ab</code></td><td><img src="https://math.jianshu.com/math?formula=ab" alt="ab"></td><td>没有空格</td></tr><tr><td>缩进空格</td><td style="text-align:left"><code>a \! b</code></td><td><img src="https://math.jianshu.com/math?formula=a%5C!b" alt="a\!b"></td><td>缩进1/6<em>m</em>宽度</td></tr></tbody></table></div><h2 id="12矩阵">    12)矩阵</h2><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br><span class="hljs-keyword">\begin</span>{array}{ccc}<br>x<span class="hljs-built_in">_</span>1 <span class="hljs-built_in">&amp;</span> x<span class="hljs-built_in">_</span>2 <span class="hljs-built_in">&amp;</span><span class="hljs-keyword">\dots</span><span class="hljs-keyword">\\</span><br>x<span class="hljs-built_in">_</span>3 <span class="hljs-built_in">&amp;</span> x<span class="hljs-built_in">_</span>4 <span class="hljs-built_in">&amp;</span><span class="hljs-keyword">\dots</span><span class="hljs-keyword">\\</span><br><span class="hljs-keyword">\vdots</span><span class="hljs-built_in">&amp;</span><span class="hljs-keyword">\vdots</span><span class="hljs-built_in">&amp;</span><span class="hljs-keyword">\ddots</span><br><span class="hljs-keyword">\end</span>{array}<br><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{array}{ccc}x_1 & x_2 &\dots\\x_3 & x_4 &\dots\\\vdots&\vdots&\ddots\end{array}</script><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br><span class="hljs-keyword">\begin</span>{pmatrix} <br>a <span class="hljs-built_in">&amp;</span> b<span class="hljs-keyword">\\</span> <br>c <span class="hljs-built_in">&amp;</span> d <span class="hljs-keyword">\\</span><br><span class="hljs-keyword">\end</span>{pmatrix}<br><br><span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\begin</span>{bmatrix} <br>a <span class="hljs-built_in">&amp;</span> b <span class="hljs-keyword">\\</span> <br>c <span class="hljs-built_in">&amp;</span> d <span class="hljs-keyword">\\</span><br><span class="hljs-keyword">\end</span>{bmatrix}<br><span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\begin</span>{Bmatrix} <br>a <span class="hljs-built_in">&amp;</span> b <span class="hljs-keyword">\\</span> <br>c <span class="hljs-built_in">&amp;</span> d <span class="hljs-keyword">\\</span><br><span class="hljs-keyword">\end</span>{Bmatrix}<br><span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\begin</span>{vmatrix} <br>a <span class="hljs-built_in">&amp;</span> b <span class="hljs-keyword">\\</span> <br>c <span class="hljs-built_in">&amp;</span> d <span class="hljs-keyword">\\</span><br><span class="hljs-keyword">\end</span>{vmatrix}<br><span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\begin</span>{Vmatrix} <br>a <span class="hljs-built_in">&amp;</span> b <span class="hljs-keyword">\\</span> <br>c <span class="hljs-built_in">&amp;</span> d <span class="hljs-keyword">\\</span><br><span class="hljs-keyword">\end</span>{Vmatrix}<br><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{pmatrix} a & b\\ c & d \\\end{pmatrix}\quad\begin{bmatrix} a & b \\ c & d \\\end{bmatrix}\quad\begin{Bmatrix} a & b \\ c & d \\\end{Bmatrix}\quad\begin{vmatrix} a & b \\ c & d \\\end{vmatrix}\quad\begin{Vmatrix} a & b \\ c & d \\\end{Vmatrix}</script><div class="note danger simple"><p><del>以下渲染均出现问题</del></p></div><div class="note success simple"><p>已解决,渲染引擎将\ _等符号自动转义成html语法。</p><p><del>把’\\’写成’\\\\’即可</del></p><p>将渲染引擎从hexo-renderer-marked <script type="math/tex">\stackrel{转换}{\longrightarrow}</script>hexo-renderer-kramed</p></div><h2 id="13长公式">    13)长公式</h2><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br><span class="hljs-keyword">\begin</span>{multline}    <br>x = a+b+c+{} <span class="hljs-keyword">\\</span>     <br>d+e+f+g  <br><span class="hljs-keyword">\end</span>{multline}<br><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{multline}    x = a+b+c+{} \\    d+e+f+g  \end{multline}</script><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br><span class="hljs-keyword">\begin</span>{split}<br>x = {} <span class="hljs-built_in">&amp;</span> a + b + c +{}<span class="hljs-keyword">\\</span>   <br>       <span class="hljs-built_in">&amp;</span> d + e + f + g<br><span class="hljs-keyword">\end</span>{split}<br><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{split}x = {} & a + b + c +{}\\           & d + e + f + g\end{split}</script><h2 id="14公式组">    14)公式组</h2><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><span class="hljs-keyword">\begin</span>{align}<br>a <span class="hljs-built_in">&amp;</span>=b+c+d <span class="hljs-keyword">\\</span><br>x <span class="hljs-built_in">&amp;</span>=y+z <span class="hljs-keyword">\\</span><br>5 <span class="hljs-built_in">&amp;</span>= 4+1<br><span class="hljs-keyword">\end</span>{align}<br><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{align}a &=b+c+d\\x &=y+z\\5 &= 4+1\end{align}</script><h2 id="15分支公式">    15)分支公式</h2><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span> y=<span class="hljs-keyword">\begin</span>{cases}<br>-x,<span class="hljs-keyword">\quad</span> x<span class="hljs-keyword">\leq</span> 0<span class="hljs-keyword">\\</span><br>x, <span class="hljs-keyword">\quad</span> x&gt;0<br><span class="hljs-keyword">\end</span>{cases} <span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">y= \begin{cases}-x, \quad x\leq 0 \\ x, \quad x>0\end{cases}</script>]]></content>
    
    
    <summary type="html">MarkDown-LaTeX写法 下</summary>
    
    
    
    <category term="MarkDown" scheme="http://dayswithvenki.top/categories/MarkDown/"/>
    
    
    <category term="👾LaTeX" scheme="http://dayswithvenki.top/tags/%F0%9F%91%BELaTeX/"/>
    
  </entry>
  
  <entry>
    <title>LaTeX语法(上)</title>
    <link href="http://dayswithvenki.top/posts/latex1.html"/>
    <id>http://dayswithvenki.top/posts/latex1.html</id>
    <published>2022-03-24T08:43:10.790Z</published>
    <updated>2022-07-06T02:08:52.122Z</updated>
    
    <content type="html"><![CDATA[<h1 align="center" id="latex语法">    <font color="#A9BFE3">LateX语法</font></h1><div class="note info simple"><p>参考文献:<a href="https://www.jianshu.com/p/8c46e915c45e">https://www.jianshu.com/p/8c46e915c45e</a></p></div><div class="note primary simple"><p>由于内容过多,分为两篇来写</p><p>下一篇 <a href="http://dayswithvenki.top/posts/latex2.html">http://dayswithvenki.top/posts/latex2.html</a></p></div><h2 id="一-markdown-排版格式">    一、 MarkDown 排版格式</h2><h3 id="块公式排版">    块公式排版</h3><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span>c = <span class="hljs-keyword">\sqrt</span>{a<span class="hljs-built_in">^</span>{2}+b<span class="hljs-built_in">_</span>{xy}<span class="hljs-built_in">^</span>2+e<span class="hljs-built_in">^</span>{x}} <span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">eg:        c = \sqrt{a^{2}+b_{xy}^2+e^{x}}</script><hr><h2 id="二-latex的公式规则">    二、LaTeX的公式规则</h2><h3 id="1转义">    1)转义</h3><div class="note simple"><p>以下几个字符:# $ % &amp; ~ _ ^ { }有特殊意义，需要表示这些字符时，需要转义，即在每个字符前加上 \ 。<br>eg:    \boxed命令给公式加一个方框。</p></div><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br>E=mc<span class="hljs-built_in">^</span>2<span class="hljs-keyword">\quad</span> 与 <span class="hljs-keyword">\quad</span><span class="hljs-keyword">\boxed</span>{E=mc<span class="hljs-built_in">^</span>2}<br><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">E=mc^2 \quad与\quad \boxed{E=mc^2}</script><div class="note danger simple"><p>\quad 表示空格</p></div><h2 id="2希腊字母">    2)希腊字母</h2><div class="table-container"><table><thead><tr><th style="text-align:center">希腊字母</th><th style="text-align:center">LaTeX</th><th style="text-align:center">希腊字母</th><th style="text-align:center">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">α</td><td style="text-align:center">\alpha</td><td style="text-align:center">ν</td><td style="text-align:center">\nu</td></tr><tr><td style="text-align:center">β</td><td style="text-align:center">\beta</td><td style="text-align:center">ξ</td><td style="text-align:center">\xi \Xi</td></tr><tr><td style="text-align:center">γ</td><td style="text-align:center">\gamma</td><td style="text-align:center">ο</td><td style="text-align:center">\omicron</td></tr><tr><td style="text-align:center">δ</td><td style="text-align:center">\delta</td><td style="text-align:center">π</td><td style="text-align:center">\pi</td></tr><tr><td style="text-align:center">ε</td><td style="text-align:center">\varepsilon</td><td style="text-align:center">ρ</td><td style="text-align:center">\rho</td></tr><tr><td style="text-align:center">ζ</td><td style="text-align:center">\zeta</td><td style="text-align:center">σ,∑</td><td style="text-align:center">\sigma \Sigma</td></tr><tr><td style="text-align:center">η</td><td style="text-align:center">\eta</td><td style="text-align:center">τ</td><td style="text-align:center">\tau</td></tr><tr><td style="text-align:center">θ</td><td style="text-align:center">\theta</td><td style="text-align:center">υ</td><td style="text-align:center">\upsilon</td></tr><tr><td style="text-align:center">ι</td><td style="text-align:center">\iota</td><td style="text-align:center">ϕ,φ,Φ</td><td style="text-align:center">\phi \varphi \Phi</td></tr><tr><td style="text-align:center">κ</td><td style="text-align:center">\kappa</td><td style="text-align:center">χ</td><td style="text-align:center">\chi</td></tr><tr><td style="text-align:center">λ</td><td style="text-align:center">\lambda</td><td style="text-align:center">ψ,Ψ</td><td style="text-align:center">\psi \Psi</td></tr><tr><td style="text-align:center">μ</td><td style="text-align:center">\mu</td><td style="text-align:center">ω,Ω</td><td style="text-align:center">\omega \Omega</td></tr></tbody></table></div><h2 id="3-上下标-根号">    3) 上下标、根号</h2><div class="note simple"><p>用^来表示上标<br>用_来表示下标<br>用\sqrt表示根号</p></div><div class="note danger simple"><p>上下标如果多余一个字符或者符号，需要用{}括起来。</p><p>开方写法: \sqrt[开方次数,默认为2]{开方式子}</p></div><p>eg:</p><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span> <span class="hljs-keyword">\sum</span><span class="hljs-built_in">_</span>{i=1}<span class="hljs-built_in">^</span>n a<span class="hljs-built_in">_</span>i <span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\sum_{i=1}^n a_i</script><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span> <span class="hljs-keyword">\sqrt</span>{x}<span class="hljs-keyword">\quad</span> <span class="hljs-keyword">\sqrt</span>[3]{x} <span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\sqrt{x}\quad \sqrt[3]{x}</script><h2 id="4分数">    4)分数</h2><div class="note simple"><p>分数用\frac表示</p></div><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span> <span class="hljs-keyword">\frac</span>{1}{2}<span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\frac{1}{2}</script><h2 id="5运算符">5)运算符</h2><div class="note simple"><p>特殊运算则用以下特殊命令\pm\; \times\; \div\; \cdot\; \cap\; \cup\; \geq\; \leq\; \neq\; \approx\; \equiv</p><script type="math/tex; mode=display">\pm\ \times\ \div\ \cdot\ \cap\ \cup\ \geq\ \leq\ \neq\ \approx\  \equiv\</script></div><div class="note simple"><p>和、积、极限、积分</p><p>\sum  \prod  \lim  \int</p><script type="math/tex; mode=display">\sum \quad \prod \quad \lim \quad \int</script></div><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span> <br><span class="hljs-keyword">\sum</span><span class="hljs-built_in">_</span>{i=1}<span class="hljs-built_in">^</span>n i <span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\prod</span><span class="hljs-built_in">_</span>{i=1}<span class="hljs-built_in">^</span>n <span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\lim</span><span class="hljs-built_in">_</span>{x<span class="hljs-keyword">\to</span>0}x<span class="hljs-built_in">^</span>2 <span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\int</span><span class="hljs-built_in">_</span>{a}<span class="hljs-built_in">^</span>{b}x<span class="hljs-built_in">^</span>2 dx <span class="hljs-keyword">\quad</span> <br><span class="hljs-keyword">\sum</span><span class="hljs-built_in">_</span>{i=1}<span class="hljs-built_in">^</span>n i <span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\prod</span><span class="hljs-built_in">_</span>{i=1}<span class="hljs-built_in">^</span>n <span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\lim</span><span class="hljs-built_in">_</span>{x<span class="hljs-keyword">\to</span>0}x<span class="hljs-built_in">^</span>2 <span class="hljs-keyword">\quad</span><br><span class="hljs-keyword">\int</span><span class="hljs-built_in">_</span>{a}<span class="hljs-built_in">^</span>{b}x<span class="hljs-built_in">^</span>2 dx<br><span class="hljs-built_in">$</span><span class="hljs-built_in">$</span><br></code></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\sum_{i=1}^n i \quad\prod_{i=1}^n \quad\lim_{x\to0}x^2 \quad\int_{a}^{b}x^2 dx \quad \sum_{i=1}^n i \quad\prod_{i=1}^n \quad\lim_{x\to0}x^2 \quad\int_{a}^{b}x^2 dx</script><p><br></p><h2 id="6多重积分">    6)多重积分</h2><div class="note simple"><p>使用如下形式: \int 、\iint 、\iiint 、\iiiint 、 \idotsint</p></div><script type="math/tex; mode=display">\int \quad \iint \quad \iiint \quad \idotsint</script>]]></content>
    
    
    <summary type="html">MarkDown-LaTeX写法 上</summary>
    
    
    
    <category term="MarkDown" scheme="http://dayswithvenki.top/categories/MarkDown/"/>
    
    
    <category term="👾LaTeX" scheme="http://dayswithvenki.top/tags/%F0%9F%91%BELaTeX/"/>
    
  </entry>
  
  <entry>
    <title>Weeks1</title>
    <link href="http://dayswithvenki.top/posts/weeks1.html"/>
    <id>http://dayswithvenki.top/posts/weeks1.html</id>
    <published>2022-03-14T10:45:02.000Z</published>
    <updated>2022-05-19T02:14:00.951Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a50f26c553b9ab904a7cc8130a273406c02d22d113cc80b7efd901f2cfcb4747"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Days" scheme="http://dayswithvenki.top/categories/Days/"/>
    
    
  </entry>
  
  <entry>
    <title>三角函数图像关系</title>
    <link href="http://dayswithvenki.top/posts/91357ab4.html"/>
    <id>http://dayswithvenki.top/posts/91357ab4.html</id>
    <published>2022-03-14T02:08:26.000Z</published>
    <updated>2022-07-06T02:04:44.820Z</updated>
    
    <content type="html"><![CDATA[<p>图片来源:<a href="https://blog.csdn.net/qq_40828914/article/details/105929384">https://blog.csdn.net/qq_40828914/article/details/105929384</a></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs 记忆公式">1.倒三角：<br>sin²+cos²=1<br>tan²+1=sec²<br>1+cot²=csc²<br>2.对角线倒数<br>3.邻点积<br>tan*cos=sin<br>sin*cot=cos<br>4.求导:左三角导数正，右三角导数负<br>上互换：<br>sin'=cos<br>cos'=-sin<br>中下2：<br>tan'=sec²<br>cot'=-csc²<br>下中下：<br>sec'=tan*sec<br>csc=-cot*csc<br>5.求积分：<br>sec积分：ln|sec+tan|+C<br>csc积分：-ln|csc+cot|+C<br><br></code></pre></td></tr></tbody></table></figure><div align="center"><img src="https://img-blog.csdnimg.cn/2020061309172049.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODI4OTE0,size_16,color_FFFFFF,t_70#pic_center " alt="Triangle" style="zoom:50%;"></div><h1 id="三角函数及其倒数的图像">    <font color="#A9BFE3">三角函数及其倒数的图像</font></h1><p><br></p><h2 id="sin-x-amp-csc-x">    <div align="center">    <font color="#FFC0BE">sin x &amp; csc x</font>    </div></h2><p><img src="https://img-blog.csdnimg.cn/20200505112809395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODI4OTE0,size_16,color_FFFFFF,t_70" style="zoom:80%;"></p><h2 id="cos-x-amp-sec-x">    <div align="center"><font color="#FFC0BE">cos x &amp; sec x</font></div></h2><p><img src="https://img-blog.csdnimg.cn/20200505112829334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODI4OTE0,size_16,color_FFFFFF,t_70" style="zoom:80%;"></p><h2 id="tan-x-amp-cot-x">    <div align="center"><font color="#FFC0BE">tan x &amp; cot x</font></div></h2><p><img src="https://img-blog.csdnimg.cn/20200505113007408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODI4OTE0,size_16,color_FFFFFF,t_70" style="zoom:80%;"></p><h1 id="三角函数及其反函数的图像">    <font color="#A9BFE3">三角函数及其反函数的图像</font></h1><h2 id="sin-x-amp-arcsin-x">    <div align="center"><font color="#FFC0BE">sin x &amp; arcsin x</font></div></h2><p><img src="https://img-blog.csdnimg.cn/20200505123720721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODI4OTE0,size_16,color_FFFFFF,t_70" style="zoom:80%;"></p><h2 id="cos-x-amp-arccos-x">    <div align="center"><font color="#FFC0BE">cos x &amp; arccos x</font></div></h2><p><img src="https://img-blog.csdnimg.cn/20200505123432356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODI4OTE0,size_16,color_FFFFFF,t_70" style="zoom:80%;"></p><h2 id="tan-x-amp-arctan-x">    <div align="center"><font color="#FFC0BE">tan x &amp; arctan x</font></div></h2><p><img src="https://img-blog.csdnimg.cn/20200505124052532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODI4OTE0,size_16,color_FFFFFF,t_70" style="zoom:80%;"></p><h2 id="函数及其反函数图像关于yx对称">    <div align="center"><font color="#FFC0BE">函数及其反函数图像关于y=x对称</font></div></h2><p><img src="https://img-blog.csdnimg.cn/20200505124405977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwODI4OTE0,size_16,color_FFFFFF,t_70" style="zoom:80%;"></p>]]></content>
    
    
    <summary type="html"> </summary>
    
    
    
    <category term="三角函数" scheme="http://dayswithvenki.top/categories/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0/"/>
    
    
    <category term="🧮三角函数" scheme="http://dayswithvenki.top/tags/%F0%9F%A7%AE%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>三角函数求导</title>
    <link href="http://dayswithvenki.top/posts/91357ab3.html"/>
    <id>http://dayswithvenki.top/posts/91357ab3.html</id>
    <published>2022-03-14T00:55:19.000Z</published>
    <updated>2022-07-06T02:04:36.113Z</updated>
    
    <content type="html"><![CDATA[<h3 id="注三角函数的导数1反三角函数导数的倒数需要注意替换xyeg-sin-x和-arcsin-x">    <font color="#FFC0BE">注：三角函数的导数=1/反三角函数导数的倒数(需要注意替换x,y)</font><br>eg: sin x和 arcsin x<img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/math/证明过程1.png" alt="反函数求导" style="zoom:60%;"></h3><p>​      </p><h1 id="三角函数">    <font color="#A9BFE3">三角函数</font></h1><p><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/math/函数求导.png" alt="反函数求导"></p><p></p><h1 id="反三角函数">    <font color="#A9BFE3">反三角函数</font></h1><br><img src="https://jsdelivr.pai233.top/gh/Wadehl/web-data/MyBlogdata/math/反函数求导.png" alt="反函数求导" style="zoom:67%;"><p></p>]]></content>
    
    
    <summary type="html"> </summary>
    
    
    
    <category term="三角函数" scheme="http://dayswithvenki.top/categories/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0/"/>
    
    
    <category term="🧮三角函数" scheme="http://dayswithvenki.top/tags/%F0%9F%A7%AE%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
</feed>
